{"version":3,"sources":["ng://geoplatform.map/control/L.Control.Loading.ts","ng://geoplatform.map/control/L.Control.MeasureControl.ts","ng://geoplatform.map/control/L.Control.MousePosition.ts","node_modules/tslib/tslib.es6.js","ng://geoplatform.map/control/L.Control.FeatureEditor.ts","ng://geoplatform.map/service/types.ts","ng://geoplatform.map/layer/osm.ts","ng://geoplatform.map/layer/baselayer-default.ts","ng://geoplatform.map/layer/L.esri.Cluster.FeatureLayer.ts","ng://geoplatform.map/shared/style-resolver.ts","ng://geoplatform.map/shared/popup-template.ts","ng://geoplatform.map/layer/cluster-feature.ts","ng://geoplatform.map/layer/wms.ts","ng://geoplatform.map/layer/wmst.ts","ng://geoplatform.map/layer/wmts.ts","ng://geoplatform.map/layer/L.TileLayer.ESRI.ts","ng://geoplatform.map/layer/osm-factory.ts","ng://geoplatform.map/layer/factory.ts","ng://geoplatform.map/layer/feature.ts","ng://geoplatform.map/map/instance.ts","ng://geoplatform.map/map/factory.ts","ng://geoplatform.map/polyfills.ts","ng://geoplatform.map/index.ts"],"names":["loadingControl","Control","extend","options","position","separate","zoomControl","spinjs","spin","lines","length","width","radius","rotate","top","initialize","Util","setOptions","this","_dataLoaders","onAdd","map","_addLayerListeners","_addMapListeners","zoomsliderControl","container","classes","_container","DomUtil","create","_indicator","onRemove","_removeLayerListeners","_removeMapListeners","removeFrom","removeChild","_map","prototype","remove","call","addLoader","id","updateIndicator","removeLoader","isLoading","_showIndicator","_hideIndicator","_countLoaders","key","size","hasOwnProperty","addClass","Zoom","removeClass","_zoomOutButton","_handleLoading","e","getEventId","_handleLoad","layer","_leaflet_id","target","_layerAdd","on","loading","load","exception","console","warn","eachLayer","off","dataloading","dataload","layerremove","L","L_1","Loading","Map","addInitHook","addControl","measureControl","_createButton","_toggleMeasure","html","title","className","fn","context","link","innerHTML","href","DomEvent","stopPropagation","preventDefault","_measuring","_startMeasuring","_stopMeasuring","_oldCursor","style","cursor","_doubleClickZoom","doubleClickZoom","enabled","disable","_mouseMove","_mouseClick","_finishPath","_layerPaint","layerGroup","addTo","_points","enable","clearLayers","_restartPath","latlng","_lastPoint","_layerPaintPathTemp","spliceLatLngs","polyline","color","weight","clickable","dashArray","_tooltip","_distance","_updateTooltipPosition","distance","distanceTo","_updateTooltipDistance","_createTooltip","_layerPaintPath","addLatLng","_lastCircle","removeLayer","markerOpts","opacity","fill","fillOpacity","CircleMarker","undefined","icon","divIcon","iconAnchor","marker","setLatLng","total","difference","totalRound","_round","differenceRound","text","_icon","val","Math","round","_onKeyDown","keyCode","Measure","control","measure","mergeOptions","positionControl","separator","emptyString","lngFirst","numDigits","lngFormatter","latFormatter","prefix","disableClickPropagation","_onMouseMove","lng","formatNum","lat","value","prefixAndValue","MousePosition","mousePosition","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","__extends","__","constructor","FeatureEditor","doneEditing","unregisterTool","tool","deactivate","getMap","removeControl","editingLayer","showOriginalLayer","bool","feature","properties","getFeatureLayer","setFeatureVisibility","beginEditing","visible","originalFeature","GeoJSON","geometryToLayer","toGeoJSON","FeatureGroup","geometry","type","indexOf","type_1","replace","coordinates","each","childCoords","shape","onEachFeature","addLayer","geometries","childGeometry","EditFeature","featureGroup","activate","save","hasBeenEdited","isMulti_1","isGeomColl_1","geoms_1","coords_1","geometry_1","replaceFeature","updateFeature","addProperty","highlightFeature","focusFeature","deleteFeature","removeFeature","style_1","setStyle","cancelEditing","_super","tslib_1.__extends","opts","selectedPathOptions","fillColor","maintainColor","handler","Draw","EditToolbar","Edit","result","edited","assign","draw","edit","keyFn","expr","str","m","exec","OSM","test","resourceTypes","get","layerService","query","QueryFactory","fields","LayerService","Config","ualUrl","JQueryHttpClient","search","then","response","results","catch","Q.reject","DefaultBaseLayer","baseLayerId","defaultBaseLayerId","set","configure","ogcExpr","esriExpr","types","ESRI_FEATURE_SERVER","uri","description","label","ESRI_IMAGE_SERVER","ESRI_MAP_SERVER","ESRI_TILE_SERVER","KML","CSW","WCS","WFS","WMS","WMTS","WMST","FEED","refresh","updateList","service","url","pageSize","ItemService","data","i","supported","toUpperCase","error","log","message","FeatureLayer","esri.FeatureManager","statics","EVENTS","CLUSTEREVENTS","_layers","_leafletIds","cluster","MarkerClusterGroup","_key","random","toString","addEventParent","createLayers","features","markers","geojson","newLayer","asFeature","defaultOptions","resetStyle","fire","timeField","_featureWithinTimeRange","push","addLayers","ids","layersToAdd","removeLayers","permanent","layersToRemove","setFeatureStyle","eachFeature","getFeature","jQuery","jquery","featureStyleResolver","deferred","Q.defer","ajax","dataType","success","resolve","xhr","status","Error","reject","promise","featurePopupTemplate","pFn","list","names","find","name","lc","toLowerCase","date","props","keys","titleProp","descProp","modified","Date","toDateString","toTimeString","linkProp","prop","ClusteredFeatureLayer","EsriClusterFeatureLayer","currentVisibility","currentOpacity","_gpStyle","pointToLayerFn","stroke","renderer","height","mopts","iconFn","iconUrl","content","iconSize","popupAnchor","leafletPane","pane","markerFn","circleMarkerFn","popupTemplate","bindPopup","eachFeatureFn","_this","pointToLayer","bind","spiderfyDistanceMultiplier","styleResolver","svgOpts","SVG","svg","Canvas","canvas","zIndex","setZIndex","layerId","loadStyle","setVisibility","setOpacity","index","lyr","_updateZIndex","_renderer","toggleVisibility","_featureGroup","display","isNaN","css","gpLayerId","styleLoader","json","styles","styleFn","property","field1","v","wrapper","sw","JSON","stringify","featureFn_1","setTimeout","obj","clusteredFeatures","services","supportedFormats","layerName","geoJsonFeed","layerUrl","styleUrl","isModern","TileLayer","enableGetFeatureInfo","getFeatureInfo","_enabled","disableGetFeatureInfo","isGetFeatureInfoEnabled","evt","getFeatureInfoUrl","parseGetFeatureInfo","point","latLngToContainerPoint","getSize","params","srs","bbox","getBounds","toBBoxString","y","x","info_format","j","wmvId","getParamString","field","join","showGetFeatureInfo","err","popup","maxWidth","setContent","openOn","wms","formats","format","version","api","filter","accessURL","layers","transparent","tileLayer","L.TimeDimension","Layer","_parseTimeDimensionFromCapabilities","xml","querySelectorAll","_baseLayer","wmsParams","times","forEach","current","querySelector","_getTimesFromLayerCapabilities","parentNode","dimensions","textContent","trim","extents","toISOString","wmst","gpLayer","leafletLayer","proxyUrl","tdOpts","temporal","d1","startDate","d2","endDate","timeDimension","( /** @type {?} */(L)).TimeDimension","proxy","paramRe","_url","defaultWmtsParams","request","tileMatrixSet","wmtsParams","tileSize","detectRetina","Browser","retina","matrixIds","getDefaultMatrix","_crs","crs","getTileUrl","coords","nwPoint","multiplyBy","sePoint","add","Point","zoom","_tileZoom","nw","project","unproject","tilewidth","ident","identifier","X0","topLeftCorner","Y0","tilecol","floor","tilerow","isTileMatrixTemplated","isTileRowTemplated","isTileColTemplated","o","s","_getSubdomain","k","TileMatrix","TileRow","TileCol","qsi","template","setParams","noRedraw","redraw","matrixIds3857","LatLng","tilePoint","abs","subdomains","wmts","distro","distributions","dist","mediaType","parameters","param","plc","defaultValue","values","EsriTileLayer","defaultESRIParams","f","qidx","substring","dim","esriParams","imagesr","bboxsr","code","z","se","ESRI","esri","OSMLayerFactory","minZoom","maxZoom","attribution","LayerFactory","factories","init","LayerFactory$1","register","setLayerService","getStyleResolver","styleResolverFactory","msg","typeUri","serviceType","supportedCRS","checkUrl","ServiceTypes","ESRITileLayer","useCors","esri.tiledMapLayer","esri.imageMapLayer","esri.FeatureLayer","Listener","listener","_listeners","idx","splice","notify","_i","arguments","args","slice","l","apply","MapInstance","dispose","destroyMap","svcCache","serviceFactory","httpClient","_mapId","_mapDef","_mapInstance","_defaultExtent","_baseLayerDef","_layerStates","_layerCache","_layerErrors","_featureLayer","_featureLayerVisible","_tools","state","_geoJsonLayerOpts","getKey","setService","mapService","setServiceFactory","factory","setHttpClient","getService","setErrorHandler","_layerErrorHandler","getLayerStateIndex","getLayerState","initializeMapDefinition","ItemTypes","MAP","createdBy","baseLayer","keywords","themes","getMapResourceContent","metadata","annotations","geoJSON","extent","minx","getWest","miny","getSouth","maxx","getEast","maxy","getNorth","getDrawControlToolbar","drawControl","toolbars","_toolbars","toolbar","_modes","handleLayerError","processLayerError","finder","obj_1","logLayerError","tile","src","split","LAYER","validate","def","errorMsg","touch","event","dirty","clean","setMap","getMapDefinition","getMapId","setView","getZoom","getView","latLng","getCenter","zoomToDefault","fitBounds","setExtent","setBaseLayer","Q.resolve","oldBaseLayer","getBaseLayer","getLayers","getLayerErrors","clearLayerErrors","clearOverlays","layerInstance","visibility","parse","addLayerWithState","setLayerVisibility","setLayerOpacity","moveLayer","from","to","copy","layerState","toggleLayerVisibility","_currentImage","getOpacity","updateLayerOpacity","getLeafletLayerFor","toggleGetFeatureInfo","getFeatures","addFeatures","addFeature","fireEvent","addFeatureLayer","featureJson","bindTooltip","featureId","getLatLng","panTo","removeFeatures","toggleFeaturesLayer","setFeatureLayerVisibility","getFeaturesLayerVisibility","_addFeatureLayer","LayerGroup","child","_path","saveMap","md","gpMapType","fetchMap","mapId","loadMap","env","patch","op","path","statistics","numViews","updated","loadMapFromObj","t","west","east","south","north","min","max","fc","setAsNewMap","mapToUse","registerTool","enableTool","finish","cacheMap","restoreMap","ServiceFactory","ceil","desc","circleMarker","cache","instance","Polyfills","defineProperty","varArgs","TypeError","nextSource","nextKey","writable","configurable","featureLayer"],"mappings":"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","sourcesContent":["\nimport { Control, Util, DomUtil, Map } from 'leaflet';\n\nvar loadingControl = Control.extend({\n    options: {\n        position: 'topleft',\n        separate: false,\n        zoomControl: null,\n        spinjs: false,\n        spin: {\n          lines: 7,\n          length: 3,\n          width: 3,\n          radius: 5,\n          rotate: 13,\n          top: \"83%\"\n        }\n    },\n\n    initialize: function(options) {\n        Util.setOptions(this, options);\n        this._dataLoaders = {};\n\n        // Try to set the zoom control this control is attached to from the\n        // options\n        if (this.options.zoomControl !== null) {\n            this.zoomControl = this.options.zoomControl;\n        }\n    },\n\n    onAdd: function(map) {\n\n        this._addLayerListeners(map);\n        this._addMapListeners(map);\n\n        // Try to set the zoom control this control is attached to from the map\n        // the control is being added to\n        if (!this.options.separate && !this.zoomControl) {\n            if (map.zoomControl) {\n                this.zoomControl = map.zoomControl;\n            } else if (map.zoomsliderControl) {\n                this.zoomControl = map.zoomsliderControl;\n            }\n        }\n\n        // Create the loading indicator\n        var classes = 'leaflet-control-loading';\n        var container;\n        if (this.zoomControl && !this.options.separate) {\n            // If there is a zoom control, hook into the bottom of it\n            container = this.zoomControl._container;\n            // These classes are no longer used as of Leaflet 0.6\n            classes += ' leaflet-bar-part-bottom leaflet-bar-part last';\n        }\n        else {\n            // Otherwise, create a container for the indicator\n            container = DomUtil.create('div', 'leaflet-control-zoom leaflet-bar');\n        }\n        this._indicator = DomUtil.create('a', classes, container);\n        return container;\n    },\n\n    onRemove: function(map) {\n        this._removeLayerListeners(map);\n        this._removeMapListeners(map);\n    },\n\n    removeFrom: function (map) {\n        if (this.zoomControl && !this.options.separate) {\n            // Override Control.removeFrom() to avoid clobbering the entire\n            // _container, which is the same as zoomControl's\n            this._container.removeChild(this._indicator);\n            this._map = null;\n            this.onRemove(map);\n            return this;\n        }\n        else {\n            // If this control is separate from the zoomControl, call the\n            // parent method so we don't leave behind an empty container\n            return Control.prototype.remove.call(this);\n        }\n    },\n\n    addLoader: function(id) {\n        this._dataLoaders[id] = true;\n        this.updateIndicator();\n    },\n\n    removeLoader: function(id) {\n        delete this._dataLoaders[id];\n        this.updateIndicator();\n    },\n\n    updateIndicator: function() {\n        if (this.isLoading()) {\n            this._showIndicator();\n        }\n        else {\n            this._hideIndicator();\n        }\n    },\n\n    isLoading: function() {\n        return this._countLoaders() > 0;\n    },\n\n    _countLoaders: function() {\n        var size = 0, key;\n        for (key in this._dataLoaders) {\n            if (this._dataLoaders.hasOwnProperty(key)) size++;\n        }\n        return size;\n    },\n\n    _showIndicator: function() {\n        // Show loading indicator\n        DomUtil.addClass(this._indicator, 'is-loading');\n\n        // If zoomControl exists, make the zoom-out button not last\n        if (!this.options.separate) {\n            if (this.zoomControl instanceof Control.Zoom) {\n                DomUtil.removeClass(this.zoomControl._zoomOutButton, 'leaflet-bar-part-bottom');\n            }\n        }\n    },\n\n    _hideIndicator: function() {\n        // Hide loading indicator\n        DomUtil.removeClass(this._indicator, 'is-loading');\n\n        // If zoomControl exists, make the zoom-out button last\n        if (!this.options.separate) {\n            if (this.zoomControl instanceof Control.Zoom) {\n                DomUtil.addClass(this.zoomControl._zoomOutButton, 'leaflet-bar-part-bottom');\n            }\n        }\n    },\n\n    _handleLoading: function(e) {\n        this.addLoader(this.getEventId(e));\n    },\n\n    _handleLoad: function(e) {\n        this.removeLoader(this.getEventId(e));\n    },\n\n    getEventId: function(e) {\n        if (e.id) {\n            return e.id;\n        }\n        else if (e.layer) {\n            return e.layer._leaflet_id;\n        }\n        return e.target._leaflet_id;\n    },\n\n    _layerAdd: function(e) {\n        if (!e.layer || !e.layer.on) return;\n        try {\n            e.layer.on({\n                loading: this._handleLoading,\n                load: this._handleLoad\n            }, this);\n        }\n        catch (exception) {\n            console.warn('L.Control.Loading: Tried and failed to add ' +\n                         ' event handlers to layer', e.layer);\n            console.warn('L.Control.Loading: Full details', exception);\n        }\n    },\n\n    _addLayerListeners: function(map) {\n        // Add listeners for begin and end of load to any layers already on the\n        // map\n        map.eachLayer(function(layer) {\n            if (!layer.on) return;\n            layer.on({\n                loading: this._handleLoading,\n                load: this._handleLoad\n            }, this);\n        }, this);\n\n        // When a layer is added to the map, add listeners for begin and end\n        // of load\n        map.on('layeradd', this._layerAdd, this);\n    },\n\n    _removeLayerListeners: function(map) {\n        // Remove listeners for begin and end of load from all layers\n        map.eachLayer(function(layer) {\n            if (!layer.off) return;\n            layer.off({\n                loading: this._handleLoading,\n                load: this._handleLoad\n            }, this);\n        }, this);\n\n        // Remove layeradd listener from map\n        map.off('layeradd', this._layerAdd, this);\n    },\n\n    _addMapListeners: function(map) {\n        // Add listeners to the map for (custom) dataloading and dataload\n        // events, eg, for AJAX calls that affect the map but will not be\n        // reflected in the above layer events.\n        map.on({\n            dataloading: this._handleLoading,\n            dataload: this._handleLoad,\n            layerremove: this._handleLoad\n        }, this);\n    },\n\n    _removeMapListeners: function(map) {\n        map.off({\n            dataloading: this._handleLoading,\n            dataload: this._handleLoad,\n            layerremove: this._handleLoad\n        }, this);\n    }\n});\n\n\nif( (window as any).L) {\n    const L = (window as any).L;\n    L.Control.Loading = loadingControl;\n    L.Control.loading = function(options) {\n        return new L.Control.Loading(options);\n    };\n}\n\nMap.addInitHook(function () {\n    if (this.options.loadingControl) {\n        this.loadingControl = new loadingControl();\n        this.addControl(this.loadingControl);\n    }\n});\n\nexport default loadingControl;\n","\nimport {\n    Control, control,\n    Map,\n    DomUtil, DomEvent,\n    layerGroup,\n    polyline, CircleMarker, divIcon, marker,\n    PolylineOptions, CircleMarkerOptions\n} from 'leaflet';\n\n\nvar measureControl = Control.extend({\n    options: {\n        position: 'topleft'\n    },\n\n    onAdd: function (map) {\n        var className = 'leaflet-control-zoom leaflet-bar leaflet-control',\n            container = DomUtil.create('div', className);\n\n        this._createButton('&#8674;', 'Measure', 'leaflet-control-measure leaflet-bar-part leaflet-bar-part-top-and-bottom', container, this._toggleMeasure, this);\n\n        return container;\n    },\n\n    _createButton: function (html, title, className, container, fn, context) {\n        var link = DomUtil.create('a', className, container);\n        link.innerHTML = html;\n        (link as HTMLAnchorElement).href = '#';\n        link.title = title;\n\n        DomEvent\n            .on(link, 'click', DomEvent.stopPropagation)\n            .on(link, 'click', DomEvent.preventDefault)\n            .on(link, 'click', fn, context)\n            .on(link, 'dblclick', DomEvent.stopPropagation);\n\n        return link;\n    },\n\n    _toggleMeasure: function () {\n        this._measuring = !this._measuring;\n\n        if(this._measuring) {\n            DomUtil.addClass(this._container, 'leaflet-control-measure-on');\n            this._startMeasuring();\n        } else {\n            DomUtil.removeClass(this._container, 'leaflet-control-measure-on');\n            this._stopMeasuring();\n        }\n    },\n\n    _startMeasuring: function() {\n        this._oldCursor = this._map._container.style.cursor;\n        this._map._container.style.cursor = 'crosshair';\n\n        this._doubleClickZoom = this._map.doubleClickZoom.enabled();\n        this._map.doubleClickZoom.disable();\n\n        DomEvent\n            .on(this._map, 'mousemove', this._mouseMove, this)\n            .on(this._map, 'click', this._mouseClick, this)\n            .on(this._map, 'dblclick', this._finishPath, this)\n            //.on( (document as Document), 'keydown', this._onKeyDown, this);\n\n        if(!this._layerPaint) {\n            this._layerPaint = layerGroup().addTo(this._map);\n        }\n\n        if(!this._points) {\n            this._points = [];\n        }\n    },\n\n    _stopMeasuring: function() {\n        this._map._container.style.cursor = this._oldCursor;\n\n        DomEvent\n            //.off((document as Document), 'keydown', this._onKeyDown, this)\n            .off(this._map, 'mousemove', this._mouseMove, this)\n            .off(this._map, 'click', this._mouseClick, this)\n            .off(this._map, 'dblclick', this._mouseClick, this);\n\n        if(this._doubleClickZoom) {\n            this._map.doubleClickZoom.enable();\n        }\n\n        if(this._layerPaint) {\n            this._layerPaint.clearLayers();\n        }\n\n        this._restartPath();\n    },\n\n    _mouseMove: function(e) {\n        if(!e.latlng || !this._lastPoint) {\n            return;\n        }\n\n        if(!this._layerPaintPathTemp) {\n            let opts = {\n                color: 'black',\n                weight: 1.5,\n                clickable: false,\n                dashArray: '6,3'\n            } as PolylineOptions;\n            this._layerPaintPathTemp = polyline([this._lastPoint, e.latlng], opts)\n                .addTo(this._layerPaint);\n        } else {\n            this._layerPaintPathTemp.spliceLatLngs(0, 2, this._lastPoint, e.latlng);\n        }\n\n        if(this._tooltip) {\n            if(!this._distance) {\n                this._distance = 0;\n            }\n\n            this._updateTooltipPosition(e.latlng);\n\n            var distance = e.latlng.distanceTo(this._lastPoint);\n            this._updateTooltipDistance(this._distance + distance, distance);\n        }\n    },\n\n    _mouseClick: function(e) {\n        // Skip if no coordinates\n        if(!e.latlng) {\n            return;\n        }\n\n        // If we have a tooltip, update the distance and create a new tooltip, leaving the old one exactly where it is (i.e. where the user has clicked)\n        if(this._lastPoint && this._tooltip) {\n            if(!this._distance) {\n                this._distance = 0;\n            }\n\n            this._updateTooltipPosition(e.latlng);\n\n            var distance = e.latlng.distanceTo(this._lastPoint);\n            this._updateTooltipDistance(this._distance + distance, distance);\n\n            this._distance += distance;\n        }\n        this._createTooltip(e.latlng);\n\n\n        // If this is already the second click, add the location to the fix path (create one first if we don't have one)\n        if(this._lastPoint && !this._layerPaintPath) {\n            let opts = {\n                color: 'black',\n                weight: 2,\n                clickable: false\n            } as PolylineOptions;\n            this._layerPaintPath = polyline([this._lastPoint], opts).addTo(this._layerPaint);\n        }\n\n        if(this._layerPaintPath) {\n            this._layerPaintPath.addLatLng(e.latlng);\n        }\n\n        // Upate the end marker to the current location\n        if(this._lastCircle) {\n            this._layerPaint.removeLayer(this._lastCircle);\n        }\n\n        let markerOpts = {\n            color: 'black',\n            opacity: 1,\n            weight: 1,\n            fill: true,\n            fillOpacity: 1,\n            radius:2,\n            clickable: this._lastCircle ? true : false\n        } as CircleMarkerOptions;\n        this._lastCircle = new CircleMarker(e.latlng, markerOpts).addTo(this._layerPaint);\n\n        this._lastCircle.on('click', function() { this._finishPath(); }, this);\n\n        // Save current location as last location\n        this._lastPoint = e.latlng;\n    },\n\n    _finishPath: function() {\n        // Remove the last end marker as well as the last (moving tooltip)\n        if(this._lastCircle) {\n            this._layerPaint.removeLayer(this._lastCircle);\n        }\n        if(this._tooltip) {\n            this._layerPaint.removeLayer(this._tooltip);\n        }\n        if(this._layerPaint && this._layerPaintPathTemp) {\n            this._layerPaint.removeLayer(this._layerPaintPathTemp);\n        }\n\n        // Reset everything\n        this._restartPath();\n    },\n\n    _restartPath: function() {\n        this._distance = 0;\n        this._tooltip = undefined;\n        this._lastCircle = undefined;\n        this._lastPoint = undefined;\n        this._layerPaintPath = undefined;\n        this._layerPaintPathTemp = undefined;\n    },\n\n    _createTooltip: function(position) {\n        var icon = divIcon({\n            className: 'leaflet-measure-tooltip',\n            iconAnchor: [-5, -5]\n        });\n        this._tooltip = marker(position, {\n            icon: icon,\n            clickable: false\n        }).addTo(this._layerPaint);\n    },\n\n    _updateTooltipPosition: function(position) {\n        this._tooltip.setLatLng(position);\n    },\n\n    _updateTooltipDistance: function(total, difference) {\n        var totalRound = this._round(total),\n            differenceRound = this._round(difference);\n\n        var text = '<div class=\"leaflet-measure-tooltip-total\">' + totalRound + ' nm</div>';\n        if(differenceRound > 0 && totalRound != differenceRound) {\n            text += '<div class=\"leaflet-measure-tooltip-difference\">(+' + differenceRound + ' nm)</div>';\n        }\n\n        this._tooltip._icon.innerHTML = text;\n    },\n\n    _round: function(val) {\n        return Math.round((val / 1852) * 10) / 10;\n    },\n\n    _onKeyDown: function (e) {\n        if(e.keyCode == 27) {\n            // If not in path exit measuring mode, else just finish path\n            if(!this._lastPoint) {\n                this._toggleMeasure();\n            } else {\n                this._finishPath();\n            }\n        }\n    }\n});\n\n\nif( (window as any).L) {\n    const L = (window as any).L;\n    L.Control.Measure = measureControl;\n    L.control.measure = function (options) {\n        return new L.Control.Measure(options);\n    };\n}\n\nMap.mergeOptions({\n    measureControl: false\n});\n\nMap.addInitHook(function () {\n    if (this.options.measureControl) {\n        this.measureControl = new measureControl();\n        this.addControl(this.measureControl);\n    }\n});\n\n\nexport default measureControl;\n","\nimport {\n    Control, control, DomUtil, DomEvent, Util, Map\n} from 'leaflet';\n\n\nvar positionControl = Control.extend({\n  options: {\n    position: 'bottomleft',\n    separator: ' : ',\n    emptyString: 'Unavailable',\n    lngFirst: false,\n    numDigits: 6,\n    lngFormatter: undefined,\n    latFormatter: undefined,\n    prefix: \"\"\n  },\n\n  onAdd: function (map) {\n    this._container = DomUtil.create('div', 'leaflet-control-mouseposition');\n    DomEvent.disableClickPropagation(this._container);\n    map.on('mousemove', this._onMouseMove, this);\n    this._container.innerHTML=this.options.emptyString;\n    return this._container;\n  },\n\n  onRemove: function (map) {\n    map.off('mousemove', this._onMouseMove);\n  },\n\n  _onMouseMove: function (e) {\n    var lng = this.options.lngFormatter ? this.options.lngFormatter(e.latlng.lng) : Util.formatNum(e.latlng.lng, this.options.numDigits);\n    var lat = this.options.latFormatter ? this.options.latFormatter(e.latlng.lat) : Util.formatNum(e.latlng.lat, this.options.numDigits);\n    var value = this.options.lngFirst ? lng + this.options.separator + lat : lat + this.options.separator + lng;\n    var prefixAndValue = this.options.prefix + ' ' + value;\n    this._container.innerHTML = prefixAndValue;\n  }\n\n});\n\n// if( (window as any).L) {\n//     const L = (window as any).L;\n//     L.Control.MousePosition =  positionControl;\n//     L.control.mousePosition = function (options) {\n//         return new L.Control.MousePosition(options);\n//     };\n// }\n(Control as any).MousePosition =  positionControl;\n(control as any).mousePosition = function (options) {\n    return new (Control as any).MousePosition(options);\n};\n\nMap.mergeOptions({\n    positionControl: false\n});\n\nMap.addInitHook(function () {\n    if (this.options.positionControl) {\n        this.positionControl = new positionControl();\n        this.addControl(this.positionControl);\n    }\n});\n\nexport default positionControl;\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\n\nimport {\n    Map, Layer, FeatureGroup, Control, GeoJSON, popup,\n    Util, DomUtil, DomEvent, Evented, ControlOptions\n} from 'leaflet';\nimport { Draw } from 'leaflet-draw';\n// import * as L from 'leaflet';   //for Leaflet.Draw\n// const Draw = L.Draw;\n// const EditHandler = Draw.EditToolbar.Edit;\n\n\n\nimport MapInstance from '../map/instance';\n\n\n\ninterface EditControlOptions extends ControlOptions {\n    featureGroup : FeatureGroup\n}\n\ninterface FeatureLayer extends Layer {\n    feature : any;\n    geometry : any;\n    properties : {\n        [key:string]: any;\n        id : string;\n    }\n    toGeoJSON() : any;\n    setStyle( args : any );\n}\n\n\nexport default class FeatureEditor {\n\n\n    private map : MapInstance;\n    private feature : FeatureLayer;\n    private originalFeature: FeatureLayer;\n    private editingLayer : FeatureGroup;\n    private tool : EditFeature;\n    private visible : boolean;\n\n\n    constructor( map : MapInstance, feature : FeatureLayer, options ?: any ) {\n        this.map = map;\n        this.feature = feature;\n        this.visible = false;\n    }\n\n\n    /**\n     *\n     */\n    disable () {\n        this.doneEditing(false);\n        this.unregisterTool();\n    }\n\n    /**\n     *\n     */\n    unregisterTool() {\n        if(this.tool) {\n            this.tool.deactivate();\n            let map = this.map.getMap();\n            map.removeControl(this.tool);\n            map.removeLayer(this.editingLayer);\n        }\n    }\n\n    /**\n     * @param bool - flag specifying the visibility of the original feature being edited\n     */\n    showOriginalLayer(bool) {\n        if(!this.feature) return;\n        let id = this.feature.properties.id;\n        let layer = this.map.getFeatureLayer(id);\n        this.map.setFeatureVisibility(layer, bool);\n    }\n\n    /**\n     *\n     */\n    beginEditing() {\n\n        if(!this.visible) return;\n\n        this.originalFeature = GeoJSON.geometryToLayer(this.feature.toGeoJSON()) as FeatureLayer;\n        this.feature.properties._editing=true;\n\n        // get Leaflet.Map from instance\n        let map = this.map.getMap();\n\n        // find feature layer for specific feature\n        let feature = this.map.getFeatureLayer(this.feature.properties.id);\n        if(!feature) return;\n\n        //clone feature layer and wrap with FeatureGroup\n        // because Leaflet.Draw requires edited features\n        // be within a FeatureGroup\n        let editingLayer = this.editingLayer = new FeatureGroup().addTo(map);\n\n        //if the feature being edited is a multi-geometry\n        // (\"MultiPoint\", \"MultiLineString\", \"MultiPolygon\", \"GeometryCollection\")\n        // then we need to split them up into individual geometries and\n        // add them as separate layers which will all be editable\n        if (this.feature.geometry.type.indexOf(\"Multi\")===0) {\n            let type = this.feature.geometry.type.replace(\"Multi\",\"\");\n            this.feature.geometry.coordinates.each( (childCoords) => {\n                let shape = {type:type, coordinates: childCoords};\n                new GeoJSON(shape, {\n                    onEachFeature: (feature, layer) => {\n                        editingLayer.addLayer(layer);\n                    }\n                });\n            });\n\n        } else if(this.feature.geometry.type === 'GeometryCollection') {\n            this.feature.geometry.geometries.each( (childGeometry) => {\n                new GeoJSON(childGeometry, {\n                    onEachFeature:   (feature, layer) => {\n                        editingLayer.addLayer(layer);\n                    }\n                });\n            });\n\n        } else {\n            new GeoJSON(feature.toGeoJSON()).eachLayer( (layer) => {\n                editingLayer.addLayer(layer);\n            });\n        }\n\n        //make this feature invisible\n        this.showOriginalLayer(false);\n\n        //register LeafletDraw control with Edit mode only\n        // using just the feature layer identified\n        this.tool = new EditFeature({\n            featureGroup: editingLayer\n        } as ControlOptions).addTo(map);\n        this.tool.activate();\n\n    }\n\n    /**\n     * @param save - flag specifying whether to persist changes to the feature\n     */\n    doneEditing( save ?: boolean ) {\n\n        this.feature.properties._editing = false;\n\n        if(typeof(save) === 'undefined' || save) {\n\n            //if geometry changed\n            if(this.tool && this.tool.hasBeenEdited()) {\n\n                let isMulti = ~this.feature.geometry.type.indexOf(\"Multi\");\n                let isGeomColl = this.feature.geometry.type === 'GeometryCollection';\n                let geoms = [], coords = [], geometry;\n                this.editingLayer.eachLayer( (layer : Layer) => {\n                    let feature = (layer as FeatureLayer).toGeoJSON();\n                    geometry = feature.geometry;\n                    if(isMulti) {\n                        coords[coords.length] = geometry.coordinates;\n                    } else if(isGeomColl) {\n                        geoms[geoms.length] = feature;\n                    }\n                });\n\n                //update existing feature with edited information\n                if(isMulti)\n                    this.feature.geometry.coordinates = coords;\n                else if(isGeomColl)\n                    this.feature.geometry.geometries = geoms;\n                else\n                    this.feature.geometry = geometry;\n\n                //inform Map of change\n                this.map.replaceFeature(this.feature);\n\n            } else {\n                //restore original layer\n                this.showOriginalLayer(true);\n\n                //redraw feature with new style info\n                this.map.updateFeature(this.feature);\n            }\n\n        } else {\n            //restore original layer (only if feature is to be visible)\n            this.showOriginalLayer(this.visible);\n\n            //Redraw feature which has been updated with\n            // original style information (reset)\n            this.map.updateFeature(this.feature);\n        }\n\n        //lastly, break down the editing tool\n        if(this.tool) this.unregisterTool();\n\n    }\n\n    /**\n     *\n     */\n    addProperty() {\n\n    }\n\n    /**\n     *\n     */\n    highlightFeature() {\n        this.map.focusFeature(this.feature.properties.id);\n    }\n\n    /**\n     *\n     */\n    deleteFeature() {\n        this.map.removeFeature(this.feature.properties.id);\n    }\n\n    /**\n     * update rendered feature with latest info\n     */\n    updateFeature() {\n\n        //if not editing a temporary feature...\n        if(!this.editingLayer)\n            this.map.updateFeature(this.feature);\n\n        else {\n\n            //don't need to update existing rendered feature\n            // because it's been hidden and a temporary 'editing' version\n            // is on the map. So we need to update that instead.\n            // this.map.updateFeature(this.feature);\n\n\n            //update 'editing' version of the feature in question\n\n            let style = this.feature.properties.style;\n            this.editingLayer.eachLayer( (layer : Layer) => {\n                //do nothing for markers\n                if((layer as FeatureLayer).feature.geometry.type !== 'Point') {\n                    (layer as FeatureLayer).setStyle(style);\n                }\n            });\n\n        }\n\n    }\n\n    /**\n     *\n     */\n    cancelEditing () {\n        this.feature = this.originalFeature;\n        this.doneEditing(false);\n    }\n\n}\n\n\n\n\n\n\n\n\n\n/**\n *\n */\nclass EditFeature extends Control {\n\n    private map : Map;\n    private enabled : boolean;\n    private handler : Draw.EditToolbar.Edit;\n\n    constructor( options ?: any ) {\n        super( Object.assign( {\n                position: 'bottomright',\n                draw: false,\n                edit: false\n            }, options || {})\n        );\n    }\n\n    onAdd (map : Map) {\n        this.map = map;\n        this.enabled = false;\n\n        let opts = { };\n        //needed or else L.EditToolbar.Edit fails to addHooks for PolyLine features\n        (opts as any).selectedPathOptions = {\n            dashArray: '10, 10',\n            fill: true,\n            fillColor: '#fe57a1',\n            fillOpacity: 0.1,\n            // Whether to user the existing layers color\n            maintainColor: false\n        };\n        (opts as any).featureGroup = (this.options as any).featureGroup;\n\n        this.handler = new Draw.EditToolbar.Edit(map, opts);\n\n        var container = DomUtil.create('div', 'leaflet-edit-feature');\n        return container;\n    }\n\n    onRemove (map : Map) {\n        this.deactivate();\n    }\n\n    activate() {\n        this.enabled = true;\n        this.handler.enable();\n    }\n\n    deactivate() {\n        this.enabled = false;\n        this.handler.disable();\n    }\n\n    hasBeenEdited() {\n        var result = false;\n        if((this.options as any).featureGroup) {\n            (this.options as any).featureGroup.eachLayer(function(layer) {\n                result = result || layer.edited;\n            });\n        }\n        return result;\n    }\n\n}\n\n\n\n\n\n\n\n\n\n\n\n// import {\n//     Map, Layer, FeatureGroup, Control, GeoJSON, popup,\n//     Util, DomUtil, DomEvent, Evented\n// } from 'leaflet';\n// import * as Editable from \"leaflet-editable\";\n//\n// import MapInstance from '../map/instance';\n//\n//\n//\n//\n//\n// const CALLBACKS = {\n//     'marker'    : 'startMarker',\n//     'line'      : 'startPolyline',\n//     'polygon'   : 'startPolygon',\n//     'rectangle' : 'startRectangle',\n//     'circle'    : 'startCircle'\n// };\n//\n//\n// export const Events = {\n//     FEATURE_CREATED: 'feature:created',\n//     FEATURE_REMOVED: 'feature:removed',\n//     FEATURE_EDITED: 'feature:edited'\n// };\n//\n//\n// export default class FeatureEditor extends Evented {\n//\n//     private map : MapInstance;\n//     private editor : Editable;\n//     private editLayer : FeatureGroup;\n//     private featuresLayer : FeatureGroup;\n//\n//     constructor(map : MapInstance, options ?: any) {\n//         super();\n//\n//         this.map = map;\n//\n//         let leafletMap : Map = map.getMap();\n//         if(!leafletMap) throw new Error(\"No Leaflet map is configured\");\n//\n//         this.featuresLayer = map.getFeatureLayer();\n//\n//         this.editLayer = new FeatureGroup();\n//         this.editLayer.addTo(leafletMap);\n//\n//         let opts : any = {};\n//         Object.assign(opts, options||{}, {\n//             //editLayer : ...\n//             featuresLayer : this.editLayer //map.getFeatureLayer()\n//             // drawingCSSClass: 'leaflet-editable-drawing',\n//             // drawingCursor: 'crosshair',\n//             // skipMiddleMarkers: true\n//         });\n//\n//         //create and register editable instance on leaflet map\n//         let editor = new Editable(leafletMap, opts);\n//         (leafletMap as any).editTools = editor;\n//         this.editor = editor;\n//\n//         this.editor.on('editable:drawing:end', (event : any) => {\n//             //have to wrap handler in a timeout in order to not inadvertently\n//             // block the clean up of event handlers within Editable\n//             setTimeout(() => { this.onFeatureCreated(event) },50);\n//         });\n//         // this.editor.on('editable:editing', (event : any) => { this.onFeatureEdited(event) })\n//\n//         this.editor.on('editable:drawing:start', (event: any) => console.log(\"Drawing Start\") );\n//         this.editor.on('editable:drawing:end', (event: any) => console.log(\"Drawing End\") );\n//         this.editor.on('editable:drawing:cancel', (event: any) => console.log(\"Drawing Cancel\") );\n//         this.editor.on('editable:drawing:commit', (event: any) => console.log(\"Drawing Commit\") );\n//\n//         this.editor.on(\n//             'editable:drawing:start editable:drawing:end ' +\n//             'editable:drawing:cancel editable:drawing:commit ' +\n//             'editable:drawing:mousedown editable:drawing:mouseup ' +\n//             'editable:drawing:click editable:drawing:move ' +\n//             'editable:drawing:clicked',\n//             (event : any) => {\n//                 console.log(\"Editor event: \" + event.type);\n//                 if(event.layer && event.layer.options.popup) {\n//                     this.updateFeaturePopup(event.layer, event.layer.options.popup);\n//                 }\n//             }\n//         );\n//\n//         this.editor.on(\n//             'editable:vertex:new editable:vertex:click ' +\n//             'editable:vertex:clicked editable:vertex:rawclick ' +\n//             'editable:vertex:deleted editable:vertex:ctrlclick ' +\n//             'editable:vertex:shiftclick editable:vertex:metakeyclick ' +\n//             'editable:vertex:altclick editable:vertex:contextmenu ' +\n//             'editable:vertex:mousedown editable:vertex:drag ' +\n//             'editable:vertex:dragstart editable:vertex:dragend ' +\n//             'editable:middlemarker:mousedown',\n//             (event : any) => {\n//                 console.log(\"Vertex event: \" + event.type);\n//                 // if(event.layer && event.layer.options.popup) {\n//                 //     this.updateFeaturePopup(event.layer, event.layer.options.popup);\n//                 // }\n//             }\n//         );\n//\n//         if(opts.marker) {\n//             leafletMap.addControl(new EditControl({\n//                 position: opts.position || 'topleft',\n//                 callback: editor[CALLBACKS.marker],\n//                 kind: 'marker',\n//                 html: opts.marker.icon ? opts.marker.icon : 'ð'\n//             }));\n//         }\n//         if(opts.line) {\n//             leafletMap.addControl(new EditControl({\n//                 position: opts.position || 'topleft',\n//                 callback: editor[CALLBACKS.line],\n//                 kind: 'line',\n//                 html: opts.line.icon ? opts.line.icon : '\\\\/\\\\'\n//             }));\n//         }\n//         if(opts.polygon) {\n//             leafletMap.addControl(new EditControl({\n//                 position: opts.position || 'topleft',\n//                 callback: editor[CALLBACKS.polygon],\n//                 kind: 'polygon',\n//                 html: opts.polygon.icon ? opts.polygon.icon : 'â°'\n//             }));\n//         }\n//         if(opts.rectangle) {\n//             leafletMap.addControl(new EditControl({\n//                 position: opts.position || 'topleft',\n//                 callback: editor[CALLBACKS.rectangle],\n//                 kind: 'rectangle',\n//                 html: opts.rectangle.icon ? opts.rectangle.icon : 'â¬'\n//             }));\n//         }\n//         if(opts.circle) {\n//             leafletMap.addControl(new EditControl({\n//                 position: opts.position || 'topleft',\n//                 callback: editor[CALLBACKS.circle],\n//                 kind: 'circle',\n//                 html: opts.circle.icon ? opts.circle.icon : 'â¬¤'\n//             }));\n//         }\n//     }\n//\n//     isDrawing() : boolean {\n//         return this.editor ? this.editor.drawing() : false;\n//     }\n//\n//     cancel() {\n//         if(this.editor) this.editor.stopDrawing();\n//     }\n//\n//     /**\n//      * @param feature Feature to be edited\n//      */\n//     enableFeatureEdit( feature : any ) {\n//         if(!feature) return;\n//\n//         if(!feature.properties) feature.properties = {};\n//\n//         let fid =  this.getFeatureId(feature, true);\n//\n//         //make a clone of the feature to be edited\n//         let json = (feature as any).toGeoJSON();\n//         let editedLayer = GeoJSON.geometryToLayer(json);\n//         Util.setOptions(editedLayer, { originalLayerId : fid });\n//\n//         //hide that feature on featuresLayer\n//         this.map.setFeatureVisibility(feature, false);\n//\n//         //and add the editble clone of it to the edit layer\n//         this.editLayer.addLayer(editedLayer);\n//         (editedLayer as any).toggleEdit();\n//     }\n//\n//     /**\n//      * @param feature Feature being edited\n//      */\n//     applyFeatureEdit( feature : any ) {\n//\n//         let editedLayer = this.findEditedFeatureLayer(feature);\n//         if(!editedLayer) return;\n//\n//         (editedLayer as any).toggleEdit();                   //turn off editor\n//\n//         let json = (editedLayer as any).toGeoJSON();\n//         this.editLayer.removeLayer(editedLayer);    //remove from edit layer\n//\n//         // let updatedLayer = GeoJSON.geometryToLayer(json);\n//         this.map.replaceFeature(json);\n//         this.map.setFeatureVisibility(feature, true);\n//\n//     }\n//\n//     /**\n//      * @param feature Feature being edited\n//      */\n//     cancelFeatureEdit( feature : any ) {\n//\n//         let editedLayer = this.findEditedFeatureLayer(feature);\n//         if(!editedLayer) return;\n//\n//         (editedLayer as any).toggleEdit();                   //turn off editor\n//         this.editLayer.removeLayer(editedLayer);    //and remove from edit layer\n//\n//         //re-show the original feature layer\n//         this.map.setFeatureVisibility(feature, true);\n//\n//     }\n//\n//     /**\n//      * @param feature Feature Layer associated with an editable feature\n//      * @return editable Feature Layer assocaited with the specified parameter Feature Layer\n//      */\n//     findEditedFeatureLayer( feature : any ) : Layer {\n//         let editedLayer : Layer = null;\n//         this.editLayer.eachLayer( (layer : any) => {\n//             let fid = this.getFeatureId(layer);\n//             if( !editedLayer && fid == layer.originalLayerId ) {\n//                 editedLayer = layer as Layer;\n//             }\n//         });\n//         return editedLayer;\n//     }\n//\n//     /**\n//      * @param feature Feature\n//      * @param createAsNeeded flag indicating whether to create an ID if feature has none\n//      * @return feature id or null\n//      */\n//     getFeatureId( feature : any , createAsNeeded ?: boolean) : string {\n//         if(!feature) return null;\n//         if(!feature.properties) feature.properties = {};\n//         let featureId = feature.properties.id || null;\n//         if(!featureId && true === createAsNeeded)\n//             featureId = feature.properties.id = Math.round(Math.random()*9999);\n//         return featureId;\n//     }\n//\n//\n//\n//\n//     onFeatureCreated(event : any) {\n//         let feature : any = event.layer;\n//\n//         if( typeof(feature.editEnabled) !== 'undefined' && feature.editEnabled() ) {\n//             feature.toggleEdit();\n//         }\n//\n//         this.editLayer.removeLayer(feature);\n//         if(this.featuresLayer) {\n//             this.featuresLayer.addLayer(feature);\n//             feature.on('dblclick', DomEvent.stop).on('dblclick', () => {\n//\n//                 (feature as any).toggleEdit();\n//\n//                 if(feature.editEnabled()) { //'editable:enable'\n//                     //add a save and cancel btn...\n//\n//                     let latLng = null;\n//                     if(typeof(feature.getLatLng) !== 'undefined') {\n//                         latLng = feature.getLatLng();\n//                     } else if(typeof(feature.getCenter()) !== 'undefined') {\n//                         latLng = feature.getCenter();\n//                     }\n//\n//                     let fp = popup({\n//                         autoClose: false,\n//                         closeButton: false,\n//                         closeOnEscapeKey: false,\n//                         closeOnClick: false\n//                     }).setLatLng(latLng)\n//                     .setContent('<button type=\"button\">Save</button> &nbsp;&nbsp;&nbsp; <button type=\"button\">Cancel</button>')\n//                     .openOn(this.map.getMap());\n//\n//                     Util.setOptions(feature, {popup : fp});\n//\n//                 } else if( feature.options.popup ) {\n//                     feature.options.popup.remove();\n//                     // feature.editor.off('editable:drawing:start,editable:drawing:end,editable:drawing:cancel,editable:drawing:commit,editable:drawing:mousedown,editable:drawing:mouseup,editable:drawing:click,editable:drawing:move,editable:drawing:clicked');\n//\n//                 }\n//             });\n//         }\n//         this.fire(Events.FEATURE_CREATED, feature);\n//     }\n//\n//     onFeatureEdited(event : any) {\n//         let feature = event.layer;\n//         this.fire(Events.FEATURE_EDITED, feature);\n//     }\n//\n//\n//     updateFeaturePopup(feature, popup) {\n//         let latLng = null;\n//         if(typeof(feature.getLatLng) !== 'undefined') {\n//             latLng = feature.getLatLng();\n//         } else if(typeof(feature.getCenter()) !== 'undefined') {\n//             latLng = feature.getCenter();\n//         }\n//         if(latLng)\n//             popup.setLatLng(latLng);\n//     }\n// }\n//\n//\n//\n//\n//\n// class EditControl extends Control {\n//\n//     constructor(options ?: any) {\n//         super(options);\n//     }\n//\n//     initialize (options ?: any) {\n// \t\tUtil.setOptions(this, options);\n//     }\n//\n//     onAdd (map : Map) {\n//         let container : HTMLElement = DomUtil.create('div', 'leaflet-control leaflet-bar'),\n//             activateBtn : HTMLAnchorElement = DomUtil.create('a', '', container) as HTMLAnchorElement;\n//\n//         activateBtn.href = '#';\n//         activateBtn.title = 'Create a new ' + (this.options as any).kind;\n//         activateBtn.innerHTML = (this.options as any).html;\n//\n//         DomEvent.on(activateBtn, 'click', DomEvent.stop)\n//         .on(activateBtn, 'click', function () {\n//             (window as any).LAYER = this.options.callback.call( (map as any).editTools );\n//         }, this);\n//\n//         return container;\n//     }\n//\n// }\n","\nimport * as jquery from \"jquery\";\nconst jQuery = jquery;\n\nimport * as Q from \"q\";\nimport {\n    ItemService, JQueryHttpClient, QueryFactory, Config\n} from 'geoplatform.client';\n\n\n\nconst ogcExpr = /OGC.+\\(([A-Z\\-]+)\\)/;\nconst esriExpr = /Esri REST ([A-Za-z]+) Service/;\nconst keyFn = (expr, str) => {\n    let m = expr.exec(str);\n    return (m && m.length) ? m[1] : null;\n};\n\nvar types = {\n\n    ESRI_FEATURE_SERVER: {\n        \"id\":\"48980c5bad0c8d4666b393874eb5279a\",\n        \"uri\":\"http://www.geoplatform.gov/spec/esri-feature-rest\",\n        \"type\":\"dct:Standard\",\n        \"description\":\"Esri ArcGIS Feature Server REST API\",\n        \"label\":\"Esri REST Feature Service\"\n    },\n\n    ESRI_IMAGE_SERVER: {\n        \"id\":\"bcdf764e52064c84323f3f1baea7e245\",\n        \"uri\":\"http://www.geoplatform.gov/spec/esri-image-rest\",\n        \"type\":\"dct:Standard\",\n        \"description\":\"Esri ArcGIS Image Server REST API\",\n        \"label\":\"Esri REST Image Service\"\n    },\n\n    ESRI_MAP_SERVER: {\n        \"id\":\"370cf6ca5d91c07b63329b8384fe76c7\",\n        \"uri\":\"http://www.geoplatform.gov/spec/esri-map-rest\",\n        \"type\":\"dct:Standard\",\n        \"description\":\"Esri ArcGIS Map Server REST API\",\n        \"label\":\"Esri REST Map Service\"\n    },\n\n    ESRI_TILE_SERVER: {\n        \"id\": \"c75570ff2523b1a1631afe7ddac27beb\",\n        \"uri\": \"http://www.geoplatform.gov/spec/esri-tile-rest\",\n        \"type\": \"dct:Standard\",\n        \"description\": \"Esri ArcGIS Tile Server REST API\",\n        \"label\": \"Esri REST Tile Service\"\n    },\n\n    KML: {\n        \"id\":\"c0b39ca2049ba2184472ff27408ffd7e\",\n        \"uri\":\"http://opengis.net/spec/kml\",\n        \"type\":\"dct:Standard\",\n        \"description\":\"OGC Keyhole Markup Language (KML)\",\n        \"label\":\"OGC Keyhole Markup Language (KML)\"\n    },\n\n    CSW: {\n        \"id\":\"60de6a422475493b7901ae453d6f4562\",\n        \"uri\":\"http://opengis.net/spec/csw\",\n        \"type\":\"dct:Standard\",\n        \"description\":\"OGC Web Catalog Service (CSW)\",\n        \"label\":\"OGC Web Catalog Service (CSW)\"\n    },\n\n    WCS: {\n        \"id\":\"a7e5a2d81a83d4eae9bf9138f24d0a32\",\n        \"uri\":\"http://opengis.net/spec/wcs\",\n        \"type\":\"dct:Standard\",\n        \"description\":\"OGC Web Coverage Service (WCS)\",\n        \"label\":\"OGC Web Coverage Service (WCS)\"\n    },\n\n    WFS: {\n        \"id\":\"e70e43ed52f83634285a09e959734bff\",\n        \"uri\":\"http://opengis.net/spec/wfs\",\n        \"type\":\"dct:Standard\",\n        \"description\":\"OGC Web Feature Service (WFS)\",\n        \"label\":\"OGC Web Feature Service (WFS)\"\n    },\n\n    WMS: {\n        \"id\":\"abed5a00c536fb2d7019092c37ed634c\",\n        \"uri\":\"http://opengis.net/spec/wms\",\n        \"type\":\"dct:Standard\",\n        \"description\":\"OGC Web Map Service (WMS)\",\n        \"label\":\"OGC Web Map Service (WMS)\"\n    },\n\n    WMTS: {\n        \"id\":\"757858ae77cf8c602b39294c27632dd7\",\n        \"uri\":\"http://opengis.net/spec/wmts\",\n        \"type\":\"dct:Standard\",\n        \"description\":\"OGC Web Map Tile Service (WMTS)\",\n        \"label\":\"OGC Web Map Tile Service (WMTS)\"\n    },\n\n    WMST: {\n        \"id\": \"faae5bff49b1144d500380cbc055c1e5\",\n        \"uri\": \"http://www.geoplatform.gov/spec/ogc-wms-t\",\n        \"type\": \"dct:Standard\",\n        \"description\": \"OGC WMS support for temporal according to OGC Best Practice guidance\",\n        \"label\": \"OGC WMS-T Service\"\n    },\n\n    FEED: {\n        \"id\": \"8edc61870e534a1f23dc967753da3b72\",\n        \"uri\": \"http://www.geoplatform.gov/spec/feed\",\n        \"type\": \"dct:Standard\",\n        \"description\": \"GeoPlatform GeoJSON Feed Service converts an Atom/RSS feed (including GeoRSS and CAP extensions) to GeoJSON\",\n        \"label\": \"GeoPlatform GeoJSON Feed Service\"\n    },\n\n    //\n    //method to allow refreshing list later\n    refresh: updateList\n};\n\nfunction updateList(service : ItemService) {\n\n    let url = Config.ualUrl;\n    if(!url) {\n        console.log(\"WARN : ServiceTypes - no GeoPlatform API URL configured, unable to load service types\");\n    } else {\n\n        let query = QueryFactory()\n            .types('dct:Standard')\n            .resourceTypes('ServiceType')\n            .pageSize(50);\n\n\n        let svc = null;\n        //if a service was provided to be used, use it\n        if(service && typeof(service.search) !== 'undefined') {\n            svc = service;\n        } else { // otherwise, use defaults\n            svc = new ItemService(url, new JQueryHttpClient());\n        }\n\n        svc.search(query).then( data => {\n\n            for(let i=0; i<data.results.length; ++i) {\n\n                let type = data.results[i],\n                    key = null,\n                    label = type.label;\n\n                if(~label.indexOf(\"WMS-T\")) {\n                    key = 'WMST';\n                    type.supported = true;\n\n                } else if(~label.indexOf('OGC')) {\n                    key = keyFn(ogcExpr, label);\n                    type.supported = 'WMS' === key || 'WMTS' === key;\n\n                } else if(~label.indexOf('Esri')) {\n                    key = keyFn(esriExpr, label);\n                    type.supported = true;\n                    key = 'ESRI_' + key.toUpperCase() + '_SERVER';\n\n                } else if(~label.indexOf(\"Feed\")) {\n                    key = \"FEED\";\n                    type.supported = true;\n\n                } else {\n                    key = label;\n\n                }\n\n                types[key] = type;\n            }\n            // console.log(types);\n        })\n        .catch( error => {\n            console.log(\"Error loading supported service types: \" + error.message);\n        });\n    }\n}\n\nexport default types;\n","\nimport * as Q from \"q\";\nimport {\n    QueryFactory, LayerService, JQueryHttpClient, Config \n}  from 'geoplatform.client';\n\n\n/**\n * @param {LayerService} layerService - optional, GeoPlatform Layer service to use to fetch the layer\n * @return {Promise} resolving OpenStreet Map GeoPlatform Layer\n */\nexport default {\n\n    /**\n     * @param {Object} layer - GeoPlatform Layer object\n     * @return {boolean} true if is an OSM layer\n     */\n    test : function(layer) {\n        return  layer &&\n                layer.resourceTypes &&\n                layer.resourceTypes.length &&\n                ~layer.resourceTypes.indexOf(\"http://www.geoplatform.gov/ont/openlayer/OSMLayer\");\n    },\n\n    get : function(layerService ?: LayerService) : Promise<any> {\n        let query = QueryFactory()\n            .fields('*')\n            .resourceTypes(\"http://www.geoplatform.gov/ont/openlayer/OSMLayer\");\n        if(!layerService)\n            layerService = new LayerService(Config.ualUrl, new JQueryHttpClient());\n        return layerService.search(query)\n        .then( response => response.results.length ? response.results[0] : null)\n        .catch( e => Q.reject(e));\n    }\n\n};\n","\nimport * as Q from 'q';\nimport OSM from './osm';\nimport { Config, LayerService, JQueryHttpClient } from 'geoplatform.client';\n\n\nconst WORLD_STREET_LAYER = '86a8babde086689e21248669ba4ed579';\n\nvar DefaultBaseLayer = {\n\n    get: function(layerService : LayerService) {\n        if(!layerService) {\n            layerService = new LayerService(Config.ualUrl, new JQueryHttpClient());\n        }\n        let baseLayerId = Config.defaultBaseLayerId || WORLD_STREET_LAYER;\n        return layerService.get(baseLayerId)\n            .catch( (e : Error) => {\n                return OSM.get();\n            });\n    },\n\n    set: function(layer : any) {\n        let id = null;\n        if(layer && layer.id) id = layer.id;\n        else if(layer && typeof(layer) === 'string') id = layer;\n        if(id) {\n            Config.configure({'defaultBaseLayerId': layer.id});\n        }\n    }\n};\n\nexport default DefaultBaseLayer;\n","\n/* jshint ignore:start */\nimport * as MarkerCluster from 'leaflet.markercluster';\nimport \"leaflet.markercluster\";\nimport { Util, MarkerClusterGroup, GeoJSON } from 'leaflet';\nimport * as esri from \"esri-leaflet\";\n\n/* esri-leaflet-cluster - v2.0.0 - Thu Aug 18 2016 17:12:43 GMT-0700 (PDT)\n * Copyright (c) 2016 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nvar version = \"2.0.0\";\n\nvar FeatureLayer = esri.FeatureManager.extend({\n\n  statics: {\n    EVENTS: 'click dblclick mouseover mouseout mousemove contextmenu popupopen popupclose',\n    CLUSTEREVENTS: 'clusterclick clusterdblclick clustermouseover clustermouseout clustermousemove clustercontextmenu'\n  },\n\n  /**\n   * Constructor\n   */\n\n  initialize: function (options) {\n    esri.FeatureManager.prototype.initialize.call(this, options);\n\n    options = Util.setOptions(this, options);\n\n    this._layers = {};\n    this._leafletIds = {};\n\n    this.cluster = new MarkerClusterGroup(options);\n    this._key = 'c' + (Math.random() * 1e9).toString(36).replace('.', '_');\n\n    this.cluster.addEventParent(this);\n  },\n\n  /**\n   * Layer Interface\n   */\n\n  onAdd: function (map) {\n    esri.FeatureManager.prototype.onAdd.call(this, map);\n    this._map.addLayer(this.cluster);\n\n    // NOTE !!!!!!!\n    // Using this type of layer requires map.maxZoom to be set during map creation!\n    // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n  },\n\n  onRemove: function (map) {\n    esri.FeatureManager.prototype.onRemove.call(this, map);\n    this._map.removeLayer(this.cluster);\n  },\n\n  /**\n   * Feature Management Methods\n   */\n\n  createLayers: function (features) {\n    var markers = [];\n\n    for (var i = features.length - 1; i >= 0; i--) {\n      var geojson = features[i];\n      var layer = this._layers[geojson.id];\n\n      if (!layer) {\n        var newLayer : any = GeoJSON.geometryToLayer(geojson, this.options);\n        newLayer.feature = GeoJSON.asFeature(geojson);\n        newLayer.defaultOptions = newLayer.options;\n        newLayer._leaflet_id = this._key + '_' + geojson.id;\n\n        this.resetStyle(newLayer.feature.id);\n\n        // cache the layer\n        this._layers[newLayer.feature.id] = newLayer;\n\n        this._leafletIds[newLayer._leaflet_id] = geojson.id;\n\n        if (this.options.onEachFeature) {\n          this.options.onEachFeature(newLayer.feature, newLayer);\n        }\n\n        this.fire('createfeature', {\n          feature: newLayer.feature\n        });\n\n        // add the layer if it is within the time bounds or our layer is not time enabled\n        if (!this.options.timeField || (this.options.timeField && this._featureWithinTimeRange(geojson))) {\n          markers.push(newLayer);\n        }\n      }\n    }\n\n    if (markers.length) {\n      this.cluster.addLayers(markers);\n    }\n  },\n\n  addLayers: function (ids) {\n    var layersToAdd = [];\n    for (var i = ids.length - 1; i >= 0; i--) {\n      var layer = this._layers[ids[i]];\n      this.fire('addfeature', {\n        feature: layer.feature\n      });\n      layersToAdd.push(layer);\n    }\n    this.cluster.addLayers(layersToAdd);\n  },\n\n  removeLayers: function (ids, permanent) {\n    var layersToRemove = [];\n    for (var i = ids.length - 1; i >= 0; i--) {\n      var id = ids[i];\n      var layer = this._layers[id];\n      this.fire('removefeature', {\n        feature: layer.feature,\n        permanent: permanent\n      });\n      layersToRemove.push(layer);\n      if (this._layers[id] && permanent) {\n        delete this._layers[id];\n      }\n    }\n    this.cluster.removeLayers(layersToRemove);\n  },\n\n  /**\n   * Styling Methods\n   */\n\n  resetStyle: function (id) {\n    var layer = this._layers[id];\n\n    if (layer) {\n      layer.options = layer.defaultOptions;\n      this.setFeatureStyle(layer.feature.id, this.options.style);\n    }\n\n    return this;\n  },\n\n  setStyle: function (style) {\n    this.eachFeature(function (layer) {\n      this.setFeatureStyle(layer.feature.id, style);\n    }, this);\n    return this;\n  },\n\n  setFeatureStyle: function (id, style) {\n    var layer = this._layers[id];\n\n    if (typeof style === 'function') {\n      style = style(layer.feature);\n    }\n    if (layer.setStyle) {\n      layer.setStyle(style);\n    }\n  },\n\n  /**\n   * Utility Methods\n   */\n\n  eachFeature: function (fn, context) {\n    for (var i in this._layers) {\n      fn.call(context, this._layers[i]);\n    }\n    return this;\n  },\n\n  getFeature: function (id) {\n    return this._layers[id];\n  }\n});\n\nfunction featureLayer (options) {\n  return new FeatureLayer(options);\n}\n\nexport {\n    FeatureLayer,\n    featureLayer as default,\n    version as VERSION\n}\n","\nimport * as jquery from \"jquery\";\nconst jQuery = jquery;\n\nimport * as Q from \"q\";\nimport { Config } from 'geoplatform.client';\n\n/**\n * Fetches style information from GeoPlatform UAL\n * @param  id - identifier of layer to resolve style for\n */\nfunction featureStyleResolver(id : string) : Q.Promise<{}> {\n    let deferred = Q.defer();\n    if(!jQuery) {\n        deferred.reject(new Error(\"Unable to load feature layer style, jQuery is not installed\"));\n        return deferred.promise;\n    }\n    jQuery.ajax({\n       url: Config.ualUrl + '/api/layers/' + id + '/style',\n       dataType: 'json',\n       success: function(data) {\n           deferred.resolve(data);\n       },\n       error: function(xhr, status, message) {\n           let em = `FeatureStyleResolver() -\n               Error loading style information for layer ${id} : ${message}`;\n           let error = new Error(em);\n           deferred.reject(error);\n       }\n    });\n    return deferred.promise;\n}\n\nexport default featureStyleResolver;\n","\n\nfunction featurePopupTemplate(feature) {\n\n    let props = Object.keys(feature.properties);\n\n    const pFn = function(list, names) {\n        if(!list || !list.find) return null;\n        let match = list.find( name => {\n            let lc = name.toLowerCase();\n            return names.indexOf(lc)>=0;\n        });\n        return match;\n    };\n\n    let titleProp = pFn(props, ['title','name','label']);\n    let title = titleProp ? feature.properties[titleProp] : \"Untitled\";\n\n    let descProp = pFn(props, ['description', 'summary', 'descript']);\n    let description = descProp ? feature.properties[descProp] : \"No description provided\";\n\n    let result = '<div class=\"feature-popup\">' +\n        '<h5>' + title + '</h5>' +\n        '<p>' + description + '</p>';\n\n    if(feature.properties.modified) {\n        let modified = new Date(feature.properties.modified);\n        result += '<div><span class=\"label\">Updated</span><span class=\"value\">' +\n            modified.toDateString() + '</span></div>';\n    }\n\n    if(feature.properties['cap:effective']) {\n        let date = new Date(feature.properties['cap:effective']);\n        result += '<div>' +\n            '<span class=\"label\">Effective</span>' +\n            '<span class=\"value\">' +\n            date.toDateString() + ' ' + date.toTimeString() +\n            '</span>' +\n            '</div>';\n    }\n    if(feature.properties['cap:expires']) {\n        let date = new Date(feature.properties['cap:expires']);\n        result += '<div>' +\n            '<span class=\"label\">Expires</span>' +\n            '<span class=\"value\">' +\n            date.toDateString() + ' ' + date.toTimeString() +\n            '</span>' +\n            '</div>';\n    }\n\n    let linkProp = pFn(props, ['landingpage','link','website']);\n    if(linkProp) {\n        result += '<br>';\n        result += '<a href=\"' + feature.properties[linkProp] + '\" target=\"_blank\">link</a>';\n    }\n\n    result += '<hr>';\n\n    for(let prop in feature.properties) {\n        if(titleProp === prop || descProp === prop ||\n            linkProp === prop || 'modified' === prop)\n            continue;\n        let value = feature.properties[prop];\n        if(typeof(value) === 'object') {\n            for(let p in value) {\n                result += '<div>' +\n                    '<span class=\"label\">' + prop + '.' + p + '</span>' +\n                    '<span class=\"value\">' + value[p] + '</span>' +\n                    '</div>';\n            }\n        } else {\n            result += '<div>' +\n                '<span class=\"label\">' + prop + '</span>' +\n                '<span class=\"value\">' + value + '</span>' +\n                '</div>';\n        }\n    }\n    result += '</div>';\n    return result;\n}\n\nexport default featurePopupTemplate;\n","\nimport * as jquery from \"jquery\";\nconst jQuery = jquery;\n\nimport * as Q from  \"q\";\nimport { Config } from 'geoplatform.client';\n\nimport {\n    Control,\n    icon as iconFn,\n    marker as markerFn,\n    circleMarker as circleMarkerFn,\n    SVG, svg, Canvas, canvas,\n    Util,\n    Layer\n} from 'leaflet';\n\nimport { FeatureLayer as EsriClusterFeatureLayer } from './L.esri.Cluster.FeatureLayer';\nimport featureStyleResolver from '../shared/style-resolver';\nimport featurePopupTemplate from '../shared/popup-template';\n\n\n/**\n * Clustered Feature Layer\n * Provides custom style loading and point-ilization as well\n * as adding visibility and opacity manipulation methods\n */\nvar ClusteredFeatureLayer = EsriClusterFeatureLayer.extend({\n\n    currentVisibility: true,\n    currentOpacity: 1.0,\n\n    _gpStyle : { color: \"#00f\", weight: 2, fillColor: '#00f', fillOpacity: 0.3 },\n\n    /**\n     * @param {object} feature - GeoJSON Point Feature\n     * @param {L.LatLng} latlng\n     * @return {L.Marker}\n     */\n    pointToLayerFn: function (feature, latlng) {\n\n        var style = feature && feature.properties ? feature.properties.style : null;\n        if(!style && typeof this.options.style === 'function') {\n            // console.log(\"Using local style function\");\n            try {\n                style = this.options.style(feature);\n            } catch(e) {\n                console.log(\"error using style function in ClusteredFeatureLayer: \" + e.message);\n            }\n        }\n\n        style = style || this.options.style || {};\n        style.radius      = style['stroke-width'] || style.radius || 4;\n        style.weight      = style['stroke-width'] || style.weight || 2;\n        style.color       = style.stroke || style.color || '#03f';\n        style.opacity     = style['stroke-opacity'] || style.opacity || 0.9;\n        style.fillOpacity = style['fill-opacity'] || style.opacity || 0.3;\n        style.fillColor   = style.fill || style.color || '#03f';\n        style.renderer    = this.options.renderer;  //important for pane!\n\n        let marker = null;\n        if(style.shape === 'image') {\n            let width = style.width || 16;\n            let height = style.height || 16;\n            var icon = iconFn( {\n                iconUrl: style.content, //base64 encoded string\n                iconSize: [width, height],\n                iconAnchor: [width*0.5, height*0.5],\n                popupAnchor: [0, -11],\n            });\n            let mopts = { icon: icon };\n            if(Config.leafletPane) (mopts as any).pane = Config.leafletPane;\n            marker = markerFn( latlng, mopts);\n        } else {\n            marker = circleMarkerFn(latlng, style);\n        }\n\n        let popupTemplate = this.options.popupTemplate || featurePopupTemplate;\n        marker.bindPopup(popupTemplate(feature));\n\n        return marker;\n    },\n\n    /**\n     * for all non-point features, bind a popup\n     * @param {object} feature - GeoJSON feature\n     * @param {L.Layer} layer - layer representing feature\n     */\n    eachFeatureFn: function(feature, layer) {\n        if(!feature || !feature.geometry || feature.geometry.type === 'Point') {\n            return;\n        }\n        layer.bindPopup(featurePopupTemplate(feature));\n    },\n\n\n\n    initialize: function (options) {\n\n        var self = this;\n\n        options = options || {};\n\n        if(Config.leafletPane)\n            options.pane = Config.leafletPane;\n\n        options.pointToLayer = Util.bind(this.pointToLayerFn, this);\n        options.onEachFeature = Util.bind(this.eachFeatureFn, this);\n        // options.fields = ['FID', 'type', 'title', 'geometry'];\n\n        //Increase from 1 to increase the distance away from the center that spiderfied markers are placed.\n        // This needs to be increased to ensure all markers can be clicked\n        // when spiderfied (some get stuck under the spider legs)\n        options.spiderfyDistanceMultiplier = 2;\n\n        let getGPStyle = () => { return this._gpStyle; };\n        options.style = options.style || getGPStyle;\n        if(options.styleResolver) {\n            this.styleResolver = options.styleResolver;\n        }\n\n        //in order to put features-based layers into same pane as tile layers,\n        // must specify renderer and set desired pane on that\n        let svgOpts = { };\n        if(Config.leafletPane)\n            (svgOpts as any).pane = Config.leafletPane;\n        var renderer = (SVG && svg(svgOpts)) || (Canvas && canvas());\n        options.renderer = renderer;\n\n        EsriClusterFeatureLayer.prototype.initialize.call(this, options);\n\n        this.on('load', function() {\n            if(typeof this.options.zIndex !== 'undefined')\n                this.setZIndex(this.options.zIndex);\n        });\n\n    },\n\n    onAdd: function(map) {\n        EsriClusterFeatureLayer.prototype.onAdd.call(this, map);\n\n        if(this.options.layerId) {\n            this.loadStyle(this.options.layerId);\n        }\n    },\n\n    /** override super class' method to set viz/opac after sub layers created */\n    createLayers: function (features) {\n        EsriClusterFeatureLayer.prototype.createLayers.call(this, features);\n        this.setVisibility(this.currentVisibility);\n        this.setOpacity(this.currentOpacity);\n    },\n\n    /**\n     * @param {integer} index\n     */\n    setZIndex : function (index) {\n        this.options.zIndex = index;\n        for(var id in this._layers) {\n\n            let lyr = this._layers[id];\n            if(lyr.setZIndex)\n                lyr.setZIndex(index);\n            else if(lyr._updateZIndex)\n                lyr._updateZIndex(index);\n            else if(lyr._renderer && lyr._renderer._container){\n                lyr._renderer._container.style.zIndex = index;\n            } else {\n                // console.log(\"Clustered feature layer child \" + id + \" does not support ordering using z-index\");\n            }\n        }\n    },\n\n    /** */\n    toggleVisibility: function() {\n\n        this.currentVisibility = !this.currentVisibility;\n        this.setVisibility(this.currentVisibility);\n\n        // //clustered features\n        // if(this.cluster && this.cluster._featureGroup && this.cluster._featureGroup._layers) {\n        //     for(let id in this.cluster._featureGroup._layers) {\n        //         let layer = this.cluster._featureGroup._layers[id];\n        //         if(layer._icon) {\n        //             jQuery(layer._icon).toggleClass('invisible');\n        //         }\n        //     }\n        // }\n        //\n        // //non-clustered features\n        // if(this._layers) {\n        //     for(let id in this._layers)\n        //         this._layers[id].toggleVisibility();\n        // }\n    },\n\n    /**\n     * @param {boolean} bool - flag\n     */\n    setVisibility: function(bool) {\n\n        this.currentVisibility = !!bool;\n\n        //clustered features\n        if(this.cluster && this.cluster._featureGroup && this.cluster._featureGroup._layers) {\n            for(let id in this.cluster._featureGroup._layers) {\n                let layer = this.cluster._featureGroup._layers[id];\n                if(layer._icon) {\n                    //probably is a more efficient way to do this,\n                    // but this works currently.\n                    // TODO look at using\n                    //  markerCluster.refreshIconOptions({className:'invisible'});\n                    var icon = jQuery(layer._icon);\n                    if(bool) icon.removeClass('invisible');\n                    else icon.addClass('invisible');\n                }\n            }\n        }\n\n        //non-clustered features\n        if(this._layers) {\n            for(let id in this._layers) {\n                let layer = this._layers[id];\n                if(layer.setVisibility)\n                    layer.setVisibility(bool);\n                else if(layer.setStyle)\n                    layer.setStyle({display: bool ? '':'none'});\n            }\n        }\n    },\n\n    /**\n     * @param {number} opacity\n     */\n    setOpacity: function(opacity) {\n\n        this.currentOpacity = isNaN(opacity) ? 1.0 : opacity*1;\n\n        //clustered features\n        if(this.cluster && this.cluster._featureGroup && this.cluster._featureGroup._layers) {\n            for(let id in this.cluster._featureGroup._layers) {\n                let layer = this.cluster._featureGroup._layers[id];\n                if(layer._icon) {\n                    jQuery(layer._icon).css({opacity: opacity});\n                }\n            }\n        }\n\n        //non-clustered features\n        if(this._layers) {\n            for(let id in this._layers) {\n                let layer = this._layers[id];\n                if(layer.setOpacity)\n                    layer.setOpacity(opacity);\n            }\n        }\n    },\n\n    setStyle: function(style) {\n        this.eachFeature(function (layer) {\n            this.setFeatureStyle(layer.feature.id, style);\n        }, this);\n    },\n\n    loadStyle: function(gpLayerId) {\n\n        if(this.options.styleLoader) {\n            this.options.styleLoader(gpLayerId)\n            .then( json => {\n\n                if(!json) return;\n\n                let style = null;\n\n                if(json && json.styles) {\n\n                    let featureFn = function(feature) {\n\n                        let property = this.property || this.field1;\n                        let v = feature[property] || (feature.properties ? feature.properties[property] : null);\n                        let style = null;\n                        if(this.styles) {\n                            let wrapper = this.styles.find( sw => sw.value === v );\n                            if(wrapper) {\n                                style = wrapper.style;\n                                style.radius = style['stroke-width'] || style.radius || 4;\n                                style.weight = style['stroke-width'] || style.weight || 2;\n                                style.color = style.stroke || style.color || '#03f';\n                                style.opacity = style['stroke-opacity'] || style.opacity || 0.9;\n                                style.fillOpacity = style['fill-opacity'] || style.opacity || 0.3;\n                                style.fillColor = style.fill || style.color || '#03f';\n                            } else {\n                                console.log(\"No matching style for \" + JSON.stringify(feature.properties));\n                            }\n                        }\n                        // console.log(\"Using style: \" + JSON.stringify(style));\n                        return style;\n                    };\n                    let styleFn = () => { return featureFn(json); };\n                    this.options.style = styleFn;\n                    setTimeout( (layer, style) => { layer.setStyle(style); }, 1000, this, styleFn);\n                    return;\n\n                } else if(json && typeof(json.push) !== 'undefined') {\n                    //multiple styles returned\n                    style = json[0];  //use first for now\n\n                } else if(json) {\n                    style = json;\n\n                } else {\n                    return; //unrecognizable style\n                }\n\n                if(style.shape) {\n                    var obj = jQuery.extend({}, style);\n                    obj.style = style;\n                    this._gpStyle = style;\n\n                    //setStyle on Cluster.FeatureLayer doesn't appear to work consistently for\n                    // non-clustered features.\n                    // this.setStyle(obj);\n                    //So instead, we manually set it on all features of the layer (that aren't clustered)\n                    for(let id in this._layers)\n                        this._layers[id].setStyle(obj);\n\n                }\n            })\n            .catch( e => {\n                console.log(\"Error fetching feature layer style\");\n                console.log(e);\n            });\n        }\n    }\n});\n\n\n\n\n/**\n * @param layer - GeoPlatform Layer object\n * @param options - optional properties\n * @return leaflet layer instance or null\n */\nfunction clusteredFeatures(layer, options) : Layer {\n\n    let service = layer.services && layer.services.length ?\n        layer.services[0] : null;\n    if(!service) {\n        let msg = `clusteredFeatures() -\n                  Cannot create leaflet layer for GP Layer:\n                  layer has no service`;\n        throw new Error(msg);\n    }\n\n    let url     = service.href,\n        format  = layer.supportedFormats ? layer.supportedFormats[0] : null;\n\n    let styleResolver = options && options.styleResolver ?\n        options.styleResolver : featureStyleResolver;\n\n    let opts = {\n        url: url + '/' + layer.layerName,\n        styleLoader: styleResolver,\n        layerId: layer.id\n    };\n\n    if(Config.leafletPane) (opts as any).pane = Config.leafletPane;\n    if(options && options.leafletPane) (opts as any).pane = options.leafletPane;\n\n    return new ClusteredFeatureLayer(opts);\n}\n\n\n\n/**\n * @param  layer - GeoPlatform Layer object\n * @param  options - optional properties\n * @return leaflet layer instance or null\n */\nfunction geoJsonFeed(layer, options) : Layer {\n\n    let service = layer.services && layer.services.length ?\n        layer.services[0] : null;\n    if(!service) {\n        let msg = `geoJsonFeed() -\n                  Cannot create leaflet layer for GP Layer:\n                  layer has no service`;\n        throw new Error(msg);\n    }\n\n    let url     = service.href,\n        format  = layer.supportedFormats ? layer.supportedFormats[0] : null;\n\n    let layerUrl = url + (url[url.length-1]==='/'?'':'/') +\n        layer.id + '/FeatureServer/' + layer.layerName;\n\n    let styleUrl = url.replace('feeds','styles') +\n        (url[url.length-1]==='/'?'':'/') + layer.id;\n\n    let styleLoaderFactory = function(url) {\n        return function (layerId) {\n            let deferred = Q.defer();\n            if(!jQuery) {\n                deferred.reject(new Error(\"Unable to load GeoJSON feed style, jQuery is not installed\"));\n                return deferred.promise;\n            }\n            jQuery.ajax(url, {\n                dataType:'json',\n                success: function(data) {\n                    deferred.resolve(data);\n                },\n                error: function(xhr, status, message) {\n                    let em = `geoJsonFeed() -\n                        Error loading style information for layer ${layerId} : ${message}`;\n                    let error = new Error(em);\n                    deferred.reject(error);\n                }\n            });\n            return deferred.promise;          //uses jQuery promise\n        };\n    };\n\n    let opts = {\n        url: layerUrl,\n        isModern: true,         //force to use GeoJSON\n        layerId: layer.id,    //used by style loader\n        styleLoader: styleLoaderFactory(styleUrl)\n    };\n\n    if(Config.leafletPane) (opts as any).pane = Config.leafletPane;\n    if(options && options.leafletPane) (opts as any).pane = options.leafletPane;\n\n    return new ClusteredFeatureLayer(opts);\n\n}\n\n\nexport {\n    ClusteredFeatureLayer as default,\n    ClusteredFeatureLayer,\n    clusteredFeatures,\n    geoJsonFeed\n};\n","\nimport * as jquery from \"jquery\";\nconst jQuery = jquery;\n\nimport * as Q from \"q\";\nimport { Map, TileLayer, tileLayer, LatLng, Util, popup } from 'leaflet';\n\nimport {Config} from 'geoplatform.client';\n\n\n\nclass WMS extends TileLayer.WMS {\n\n    private _enabled : boolean = false;\n\n    constructor(url : string, opts ?: any) {\n        super(url, opts);\n        this._enabled = false;\n    }\n\n    enableGetFeatureInfo  () {\n        this._map.on('click', this.getFeatureInfo, this);\n        this._enabled = true;\n    }\n\n    disableGetFeatureInfo () {\n        this._map.off('click', this.getFeatureInfo, this);\n        this._enabled = false;\n    }\n\n    isGetFeatureInfoEnabled () {\n        return this._enabled;\n    }\n\n    onRemove (map : Map) : this {\n\n        //if GFI is enabled, disable it before removing\n        if(this.isGetFeatureInfoEnabled())\n        this.disableGetFeatureInfo();\n\n        // Triggered when the layer is removed from a map.\n        //   Unregister a click listener, then do all the upstream WMS things\n        return super.onRemove.call(this, map);\n\n    }\n\n    getFeatureInfo  (evt) {\n        // Make an AJAX request to the server and hope for the best\n        var url = this.getFeatureInfoUrl(evt.latlng),\n        parseGetFeatureInfo = this.parseGetFeatureInfo;\n        jQuery.ajax({\n            url: url,\n            success  (data, status, xhr) {\n                // var err = typeof data === 'string' ? null : data;\n                if(typeof(data) !== 'string')\n                data = parseGetFeatureInfo(data);\n                () => {\n                    this.showGetFeatureInfo(null, evt.latlng, data);\n                }\n            },\n            error  (xhr, status, error) {\n                () => { this.showGetFeatureInfo(error); }\n            }\n        });\n    }\n\n    getFeatureInfoUrl  (latlng : LatLng) {\n        // Construct a GetFeatureInfo request URL given a point\n        var point = this._map.latLngToContainerPoint(latlng),\n        size = this._map.getSize(),\n\n        params = {\n            srs: 'EPSG:4326',\n            bbox: this._map.getBounds().toBBoxString(),\n            height: size.y,\n            width: size.x,\n            // layers: this.wmsParams.layers,\n            // query_layers: this.wmsParams.layers,\n            info_format: 'text/xml',\n            x: point.x,\n            y: point.y,\n            i: point.x, //1.3.0\n            j: point.y  //1.3.0\n        };\n\n        let wmvId = (this.wmsParams as any).wmvId;\n\n        // return this._url + Util.getParamString(params, this._url, true);\n        var url = '/api/layers/' + wmvId + '/feature';\n        return Config.ualUrl + url + Util.getParamString(params, url, true);\n    }\n\n    parseGetFeatureInfo (content) {\n        var fields = [];\n        for(var field in content) {\n            fields.push(['<div><strong>', field, ': </strong>', content[field], '</div>'].join(' '));\n        }\n        if(fields.length == 0)\n        fields.push('<em>No data available</em>');\n        return '<div>' + fields.join(' ') + '</div>';\n    }\n\n    showGetFeatureInfo  (err : Error, latlng : LatLng, content: any) {\n        if (err) { console.log(err); return; } // do nothing if there's an error\n\n        // Otherwise show the content in a popup, or something.\n        popup({ maxWidth: 800})\n        .setLatLng(latlng)\n        .setContent(content)\n        .openOn(this._map);\n    }\n\n}\n\n\nfunction wms(layer) {\n\n    let service = layer.services && layer.services.length ?\n        layer.services[0] : null;\n    if(!service) {\n        let msg = `wms() -\n                  Cannot create leaflet layer for GP Layer:\n                  layer has no service`;\n        throw new Error(msg);\n    }\n\n    let url = service.href;\n    let formats = layer.supportedFormats || [];\n    let format  = formats.length ? formats[0] : \"image/png\";\n\n    if(!url) {\n        throw new Error(\"WMS layer's service does not defined a service url\");\n    }\n\n    let version = '1.1.1';\n    if(service.api && service.api.length) {\n        let is130 = service.api.filter(api => api.accessURL.indexOf('wms/1.3.0')>0 ).length > 0;\n        if(is130) version = '1.3.0';\n    }\n\n    let opts = {\n        layers: layer.layerName,\n        transparent: true,\n        format: format,\n        wmvId: layer.id,\n        version: version\n    };\n    if(Config.leafletPane)\n        (opts as any).pane = Config.leafletPane;\n\n    return new WMS(url, opts);\n\n}\n\nif( (window as any).L ) {\n    const L = (window as any).L;\n    L.TileLayer.WMS = WMS;\n    L.tileLayer.wms = wms;\n}\n\nexport {\n    WMS as default,\n    WMS,\n    wms\n};\n","\n\nimport * as jquery from \"jquery\";\nconst jQuery = jquery;\n\nimport * as Q from \"q\";\n\nimport * as L from 'leaflet';\nimport { TileLayer, tileLayer } from 'leaflet';\nimport 'leaflet-timedimension/dist/leaflet.timedimension.src';\n// import { TimeDimension, timeDimension } from \"../libs/L.TimeDimension\";\n\nimport {Config} from 'geoplatform.client';\n\nimport WMS from './wms';\n\n// function tdPolyFill(options) {\n//     return new WMST(options);\n// }\n//\n// var TimeDimension = L.TimeDimension;\n// var timeDimension = L.timeDimension || tdPolyFill;\n\n// var WMST = (TimeDimension && TimeDimension.Layer || TileLayer).WMS.extend({\n\nclass WMST extends (L as any).TimeDimension.Layer.WMS {\n\n    private _baseLayer : TileLayer.WMS\n\n    constructor(layer : TileLayer.WMS, opts ?: any) {\n        super(layer, opts);\n    }\n\n    //override default parser to query all Layers (whether queryable or not)\n    _parseTimeDimensionFromCapabilities (xml) {\n        var layers = xml.querySelectorAll('Layer');\n        var layerName = this._baseLayer.wmsParams.layers;\n        var layer = null;\n        var times = null;\n\n        layers.forEach(function(current) {\n            if (current.querySelector(\"Name\").innerHTML === layerName) {\n                layer = current;\n            }\n        });\n        if (layer) {\n            times = this._getTimesFromLayerCapabilities(layer);\n            if (!times) {\n                times = this._getTimesFromLayerCapabilities(layer.parentNode);\n            }\n        }\n\n        return times;\n    }\n\n    //override default parser to fall back if Dimension is provided but has no values\n    _getTimesFromLayerCapabilities (layer) {\n        var times = null;\n        var dimensions = layer.querySelectorAll(\"Dimension[name='time']\");\n        if (dimensions && dimensions.length && dimensions[0].textContent.length) {\n            times = dimensions[0].textContent.trim();\n        }\n        if(!times || !times.length) {\n            var extents = layer.querySelectorAll(\"Extent[name='time']\");\n            if (extents && extents.length && extents[0].textContent.length) {\n                times = extents[0].textContent.trim();\n            }\n        }\n        if(times && ~times.indexOf(\"current\")) {\n            times = times.replace('current', new Date().toISOString());\n        }\n        return times;\n    }\n\n}\n\n\n\n\nfunction wmst(gpLayer) {\n\n    let service = gpLayer.services[0];\n    let url = service.href;\n\n    if(!url) {\n        throw new Error(\"WMST Layer's service does not defined a service url\");\n    }\n\n    let opts = {\n        layers: gpLayer.layerName,\n        transparent: true,\n        format: \"image/png\",\n        wmvId: gpLayer.layerId\n    };\n    if(Config.leafletPane)\n        (opts as any).pane = Config.leafletPane;\n\n    let leafletLayer = new WMS( url, opts );\n\n    let proxyUrl = Config.ualUrl + '/api/services/' +\n        service.id + '/proxy/capabilities';\n\n    let tdOpts = { times : null };\n\n    if(gpLayer.temporal) {\n\n        let d1 = gpLayer.temporal.startDate ?\n            new Date(gpLayer.temporal.startDate) : new Date();\n        let d2 = gpLayer.temporal.endDate ?\n            new Date(gpLayer.temporal.endDate) : new Date();\n\n        tdOpts.times = d1.toISOString() + '/' + d2.toISOString() + '/P1D';\n    }\n\n    return new WMST(leafletLayer, {\n        timeDimension: new (L as any).TimeDimension(tdOpts),\n        proxy: proxyUrl\n    });\n}\n\nif( (window as any).L ) {\n    const L = (window as any).L;\n    L.TileLayer.WMST = WMST;\n    L.tileLayer.wmst = wmst;\n}\n\nexport {\n    WMST as default,\n    WMST,\n    wmst\n};\n","\n\nimport * as jquery from \"jquery\";\nconst jQuery = jquery;\n\nimport * as Q from \"q\";\nimport {\n    Map, TileLayer, tileLayer, Browser,\n    Point, Util, LatLng\n} from 'leaflet';\n\nimport { Config } from 'geoplatform.client';\n\n\n\n\nconst paramRe = /\\{ *([\\w_-]+) *\\}/g;\n\n// @function template(str: String, data: Object): String\n// Simple templating facility, accepts a template string of the form `'Hello {a}, {b}'`\n// and a data object like `{a: 'foo', b: 'bar'}`, returns evaluated string\n// `('Hello foo, bar')`. You can also specify functions instead of strings for\n// data values â they will be evaluated passing `data` as an argument.\nfunction template(str, data) {\n\treturn str.replace(paramRe, function (str, key) {\n\t\tvar value = data[key];\n        if (value === undefined) {\n            value = data[key.toLowerCase()];\n        }\n        if (value === undefined) {\n        \tthrow new Error('No value provided for variable ' + str);\n\t\t} else if (typeof value === 'function') {\n\t\t\tvalue = value(data);\n\t\t}\n\t\treturn value;\n\t});\n}\n\n\n/*\n * inspired by and uses code from https://github.com/mylen/leaflet.TileLayer.WMTS\n */\nclass WMTS extends TileLayer {\n\n    private _url: string;\n    private _crs: any;\n    private matrixIds : any;\n    private wmtsParams : any;\n\n    private defaultWmtsParams: any;\n\n    constructor(url : string, options ?: any) {\n        super(url, options);\n    }\n\n    initialize (url, options) { // (String, Object)\n        this._url = url;\n        this.defaultWmtsParams = {\n            service: 'WMTS',\n            request: 'GetTile',\n            version: '1.0.0',\n            layers: '',\n            styles: '',\n            tileMatrixSet: '',\n            format: 'image/png'\n        };\n        var wmtsParams = Util.extend({}, this.defaultWmtsParams);\n        var tileSize = options.tileSize || this.options.tileSize;\n        if (options.detectRetina && Browser.retina) {\n            wmtsParams.width = wmtsParams.height = tileSize * 2;\n        } else {\n            wmtsParams.width = wmtsParams.height = tileSize;\n        }\n        for (var i in options) {\n            // all keys that are not TileLayer options go to WMTS params\n            if (!this.options.hasOwnProperty(i) && i!=\"matrixIds\") {\n                wmtsParams[i] = options[i];\n            }\n        }\n        this.wmtsParams = wmtsParams;\n        this.matrixIds = options.matrixIds||this.getDefaultMatrix();\n        Util.setOptions(this, options);\n    }\n\n    onAdd ( map: Map ) : this {\n        this._crs = (this.options as any).crs || (map.options as any).crs;\n        return super.onAdd(map);\n    }\n\n    getTileUrl (coords : Point) : string { // (Point, Number) -> String\n        var tileSize = this.options.tileSize as number;\n        var nwPoint = coords.multiplyBy(tileSize);\n        nwPoint.x+=1;\n        nwPoint.y-=1;\n        var sePoint = nwPoint.add( new Point(tileSize, tileSize) );\n        var zoom = this._tileZoom;\n        var nw = this._crs.project(this._map.unproject(nwPoint, zoom));\n        var se = this._crs.project(this._map.unproject(sePoint, zoom));\n        var tilewidth = se.x-nw.x;\n        //zoom = this._map.getZoom();\n        var ident = this.matrixIds[zoom].identifier;\n        var tileMatrix = this.wmtsParams.tileMatrixSet + \":\" + ident;\n        var X0 = this.matrixIds[zoom].topLeftCorner.lng;\n        var Y0 = this.matrixIds[zoom].topLeftCorner.lat;\n        var tilecol=Math.floor((nw.x-X0)/tilewidth);\n        var tilerow=-Math.floor((nw.y-Y0)/tilewidth);\n\n\n        let url = this._url;\n        let isTileMatrixTemplated = url.indexOf('{TileMatrix}');\n        let isTileRowTemplated = url.indexOf('{TileRow}');\n        let isTileColTemplated = url.indexOf('{TileCol}');\n\n        let o = Object.assign({s: this._getSubdomain(coords)}, this.wmtsParams);\n        if(isTileMatrixTemplated>0) o.TileMatrix = ident;\n        if(isTileRowTemplated>0) o.TileRow = tilerow;\n        if(isTileColTemplated>0) o.TileCol = tilecol;\n        for(let k in o) {\n            o[k.toLowerCase()] = o[k];\n        }\n        // url = Util.template(url.toLowerCase(), o);\n        url = template(url, o);\n\n        let qsi = url.indexOf(\"?\");\n        if(qsi<0 || (isTileMatrixTemplated<qsi && isTileRowTemplated<qsi || isTileColTemplated<qsi)) {\n            //if the TM,TR,TC variables are templated but not as querystring parameters\n            // (ie, no '?' present or those params are before the '?'),\n            // then the URL must not be OGC WMTS, so no need for WMTS parameters\n\n        } else {\n            url = url + Util.getParamString(this.wmtsParams, url);\n            if(isTileMatrixTemplated<0)\n                url += \"&TileMatrix=\" + ident; //tileMatrixSet\n            if(isTileRowTemplated<0)\n                url += \"&TileRow=\" + tilerow;\n            if(isTileColTemplated<0)\n                url += \"&TileCol=\" + tilecol;\n        }\n\n        return url;\n    }\n\n    setParams (params, noRedraw) {\n        Util.extend(this.wmtsParams, params);\n        if (!noRedraw) {\n            this.redraw();\n        }\n        return this;\n    }\n\n    getDefaultMatrix  () {\n        /**\n         * the matrix3857 represents the projection\n         * for in the IGN WMTS for the google coordinates.\n         */\n        var matrixIds3857 = new Array(22);\n        for (var i= 0; i<22; i++) {\n            matrixIds3857[i]= {\n                identifier    : \"\" + i,\n                topLeftCorner : new LatLng(20037508.3428,-20037508.3428)\n            };\n        }\n        return matrixIds3857;\n    }\n\n    _getSubdomain (tilePoint : Point) : string {\n\t\tvar index = Math.abs(tilePoint.x + tilePoint.y) % this.options.subdomains.length;\n\t\treturn this.options.subdomains[index];\n\t}\n\n}\n\n\n\n\nfunction wmts(layer) {\n\n    let url = layer.services && layer.services.length ? layer.services[0].href : null;\n\n    let options = {\n        layer: layer.layerName,\n        style: 'default',\n        tileMatrixSet: \"default\",\n        format: \"image/png\"\n    };\n    if(Config.leafletPane)\n        (options as any).pane = Config.leafletPane;\n\n    let distro = (layer.distributions || []).find( dist => {\n        //ensure dist isn't 'null'\n        return dist && dist.href && ( dist.mediaType==='image/png' || dist.mediaType==='image/jpeg' );\n    });\n    if(distro) {\n        url = distro.href;\n        options.format = distro.mediaType;\n\n        let params = distro.parameters || [];\n        params.forEach( param => {\n\n            //ignore wmts specific parameters, WMTS layer will populate those values\n            // based upon map state.\n            let plc = param.name.toLowerCase();\n            if(\"tilematrix\" === plc || \"tilerow\" === plc || \"tilecol\" === plc)\n                return;\n\n            //for all other parameters, try to fill in default or initial values\n            let value = param.defaultValue || param.values && param.values.length && param.values[0];\n            if(value !== null && value !== undefined) {\n                url = url.replace('{' + param.name + '}', value);\n            }\n        });\n    } else {\n        throw new Error(\"WTMS Layer - layer \" + layer.id +\n            \" has no distribution(s) usable to make WMTS requests\");\n    }\n\n    if(!url) throw new Error(\"Unable to determine WMTS URL for layer \" + layer.id +\n        \". Please make sure it is defined by either the service or a distribution on the layer itself.\");\n\n    return new WMTS( url, options );\n\n}\n\n\nif((window as any).L) {\n    const L = (window as any).L;\n    L.TileLayer.WMTS = WMTS;\n    L.tileLayer.wmts = wmts;\n}\n\nexport {\n    WMTS as default,\n    WMTS,\n    wmts\n};\n","\n\nimport * as jquery from \"jquery\";\nconst jQuery = jquery;\n\nimport * as Q from \"q\";\nimport { Map, TileLayer, tileLayer, Point, Coords, Browser, Util } from 'leaflet';\n\nimport {Config} from 'geoplatform.client';\n\n\nclass EsriTileLayer extends TileLayer {\n\n    private _url : string;\n    private _crs : any;\n    private esriParams : any;\n    private defaultESRIParams : any;\n\n    constructor(url, options) {\n        super(url, options);\n    }\n\n    initialize (url, options) { // (String, Object)\n\n        if(!url) throw new Error(\"Layer was not configured with a URL\");\n\n        this.defaultESRIParams = {\n            layers:       '', //=show:0,1,2\n            transparent:  true,\n            format:       'png32',\n            f:            'image'\n            // srs:          '4326',\n            // bboxsr:       '4326',\n            // bbox:         null,\n            // size:         '256,256',\n            // imagesr:      '4326'\n        };\n\n        if(url.indexOf(\"/export\") < 0) {\n            let qidx = url.indexOf(\"?\");\n            if(qidx > 0) {\n                url = url.substring(0, qidx) + '/export' + url.substring(qidx);\n            } else {\n                url += '/export';\n            }\n        }\n        this._url = url;\n\n        let esriParams : any = Util.extend({}, this.defaultESRIParams),\n            tileSize = options.tileSize || this.options.tileSize;\n\n        let dim;\n        if (options.detectRetina && Browser.retina) {\n            dim = esriParams.height = tileSize * 2;\n        } else {\n            dim = esriParams.height = tileSize;\n        }\n        esriParams.size = dim + ',' + dim;\n\n        for (var i in options) {\n            // all keys that are not TileLayer options go to WMS params\n            if (!this.options.hasOwnProperty(i) && i !== 'crs') {\n                esriParams[i] = options[i];\n            }\n        }\n\n        //layer ids\n        // esriParams.layers = \"show:\" + esriParams.layers;\n\n        this.esriParams = esriParams;\n\n        Util.setOptions(this, options);\n\n    }\n\n    onAdd (map : Map) : this {\n        this._crs = (this.options as any).crs || (map.options as any).crs;\n        this.esriParams.srs = this.esriParams.imagesr = this.esriParams.bboxsr = this._crs.code;\n        return super.onAdd(map);\n    }\n\n    getTileUrl (tilePoint : Coords ) : string { // (Point, Number) -> String\n\n        let map = this._map,\n            tileSize = this.options.tileSize as number,\n\n        nwPoint = tilePoint.multiplyBy(tileSize),\n        sePoint = nwPoint.add([tileSize, tileSize]),\n\n        nw = this._crs.project(map.unproject(nwPoint, tilePoint.z)),\n        se = this._crs.project(map.unproject(sePoint, tilePoint.z)),\n        bbox = [nw.x, se.y, se.x, nw.y].join(','),\n\n        url = Util.template(this._url, {s: this._getSubdomain(tilePoint)});\n\n        let params = Util.extend({}, this.esriParams);\n        params.layers = \"show:\" + params.layers;\n\n        //convert to esri-special SR for spherical mercator\n        if(params.bboxsr === 'EPSG:3857')\n            params.bboxsr = '102100';\n        if(params.imagesr === 'EPSG:3857')\n            params.imagesr = '102100';\n\n        return url + Util.getParamString(params, url, true) + '&BBOX=' + bbox;\n    }\n\n    setParams (params, noRedraw) {\n        Util.extend(this.esriParams, params);\n        if (!noRedraw) {\n            this.redraw();\n        }\n        return this;\n    }\n\n    _getSubdomain (tilePoint : Point) : string {\n\t\tvar index = Math.abs(tilePoint.x + tilePoint.y) % this.options.subdomains.length;\n\t\treturn this.options.subdomains[index];\n\t}\n}\n\nif((window as any).L) {\n    const L = (window as any).L;\n    L.TileLayer.ESRI = EsriTileLayer;\n    L.tileLayer.esri = function (url, options) {\n        return new L.TileLayer.ESRI(url, options);\n    };\n}\n\nexport default EsriTileLayer;\n","\nimport { TileLayer } from 'leaflet';\n\n\n/**\n * @param layer - GeoPlatform Layer\n * @return\n */\nfunction OSMLayerFactory() : TileLayer {\n\n    return new TileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        minZoom: 1, maxZoom: 19,\n        attribution: 'Map data (c) <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors'\n    });\n}\n\nexport default OSMLayerFactory;\n","\nimport * as Q from \"q\";\nimport * as jquery from \"jquery\";\nconst jQuery = jquery;\n\nimport { Layer } from \"leaflet\";\nimport * as esri from \"esri-leaflet\";\nimport ServiceTypes from \"../service/types\";\nimport OSM from \"./osm\";\nimport FeatureLayer from './feature';\nimport {\n    ClusteredFeatureLayer,\n    clusteredFeatures,\n    geoJsonFeed\n} from './cluster-feature';\n\nimport {WMS, wms} from './wms';\nimport {WMST, wmst} from './wmst';\nimport {WMTS, wmts} from './wmts';\nimport ESRITileLayer from './L.TileLayer.ESRI';\nimport OSMLayerFactory from './osm-factory';\nimport { Config, ItemTypes, LayerService, JQueryHttpClient } from 'geoplatform.client';\n\ninterface LayerOptions {\n    layers ?: string|string[],\n    transparent ?: boolean,\n    format ?: string,\n    pane ?: string,\n    srs ?: string,\n    url ?: string,\n    useCors ?: boolean\n};\n\n\n/**\n * Fetches style information from GeoPlatform UAL\n * @param id - identifier of layer to resolve style for\n */\nfunction styleResolverFactory(service ?: LayerService) : any {\n\n    if(!service || typeof(service.style) !== 'function') {\n        throw new Error(\"Must provide a LayerService instance\");\n    }\n\n    return function featureStyleResolver(id) {\n        return service.style(id).catch(e => {\n            let msg = `Error loading style information for layer ${id} : ${e.message}`;\n            return Q.reject( new Error(msg) );\n        });\n    };\n}\n\n\n\n\n\n\n\n\n\nclass LayerFactory {\n\n    private factories : Function[];\n    private service : LayerService;\n\n    constructor() {\n        this.factories = [];    // A list of configured factory functors to instantiate layers\n        this.init();\n    }\n\n    register(fn : Function) {\n        if(typeof(fn) === 'function') {\n            this.factories.push(fn);\n        }\n    }\n\n    setLayerService(service : LayerService) {\n        this.service = service;\n    }\n\n    /**\n     */\n    getStyleResolver() : Function {\n        if(!this.service || typeof(this.service.style) === 'undefined') {\n            this.service = new LayerService(Config.ualUrl, new JQueryHttpClient());\n        }\n        return styleResolverFactory(this.service);\n    }\n\n    /**\n     * @param layer - GP Layer object\n     * @return leaflet layer instance or null\n     */\n    create(layer : any) : Layer {\n        if(!layer) {\n            throw new Error(\"LayerFactory expects a layer object\");\n        }\n        for(let i=0; i<this.factories.length; ++i) {\n            let fn = this.factories[i];\n            let result = fn && typeof(fn)==='function' && fn(layer);\n            if(result) return result;\n        }\n        return null;\n    }\n\n\n    init () {\n\n        //OSM factory\n        this.register((layer : any)=> {\n            if(layer && layer.resourceTypes &&\n                layer.resourceTypes.length &&\n                ~layer.resourceTypes.indexOf(\"http://www.geoplatform.gov/ont/openlayer/OSMLayer\")) {\n                return OSMLayerFactory();\n            }\n        });\n\n        // ESRI factory\n        this.register( (layer : any) => {\n            if(!layer || !layer.services || !layer.services.length) return null;\n            let service = layer.services[0],\n                url     = service.href,\n                typeUri = service.serviceType ? service.serviceType.uri : null,\n                srs     = layer.supportedCRS ? layer.supportedCRS[0] : null,\n                format  = layer.supportedFormats ? layer.supportedFormats[0] : null,\n                opts : LayerOptions;\n\n            function checkUrl(url) {\n                if(!url) throw new Error(\"Layer's service does not define a service url\");\n            }\n\n            if(ServiceTypes.ESRI_MAP_SERVER &&\n                ServiceTypes.ESRI_MAP_SERVER.uri === typeUri) {\n                checkUrl(url);\n                opts = {\n                    layers: layer.layerName,\n                    transparent: true,\n                    format: format || \"png32\"\n                } as LayerOptions;\n                if(srs) opts.srs = srs;\n                if(Config.leafletPane)\n                    opts.pane = Config.leafletPane;\n                return new ESRITileLayer(url, opts);\n\n            } else if(ServiceTypes.ESRI_FEATURE_SERVER &&\n                ServiceTypes.ESRI_FEATURE_SERVER.uri === typeUri) {\n                checkUrl(url);\n                return clusteredFeatures(layer, {\n                    styleResolver: this.getStyleResolver()\n                });\n\n            } else if(ServiceTypes.ESRI_TILE_SERVER &&\n                ServiceTypes.ESRI_TILE_SERVER.uri === typeUri) {\n                checkUrl(url);\n                opts = { url: url, useCors: true };\n                if(Config.leafletPane)\n                    opts.pane = Config.leafletPane;\n                return esri.tiledMapLayer(opts);\n\n            } else if(ServiceTypes.ESRI_IMAGE_SERVER &&\n                ServiceTypes.ESRI_IMAGE_SERVER.uri === typeUri) {\n                opts = { url: url, useCors: true };\n                if(Config.leafletPane)\n                    opts.pane = Config.leafletPane;\n                return esri.imageMapLayer(opts);\n\n            }\n            return null;\n        });\n\n        // OGC factory\n        this.register( (layer : any) => {\n            if(!layer || !layer.services || !layer.services.length) return null;\n            let service = layer.services[0],\n                typeUri = service.serviceType ? service.serviceType.uri : null;\n            if(ServiceTypes.WMS && ServiceTypes.WMS.uri === typeUri) {\n                return wms(layer);\n            } else if(ServiceTypes.WMST && ServiceTypes.WMST.uri === typeUri) {\n                return wmst(layer);\n            } else if(ServiceTypes.WMTS && ServiceTypes.WMTS.uri === typeUri) {\n                return wmts(layer);\n            }\n            return null;\n        });\n\n\n        this.register( (layer : any) => {\n            if(!layer || !layer.services || !layer.services.length) return null;\n            let service = layer.services[0],\n                typeUri = service.serviceType ? service.serviceType.uri : null;\n            if(ServiceTypes.FEED && ServiceTypes.FEED.uri === typeUri) {\n                return geoJsonFeed(layer, {\n                    styleResolver: this.getStyleResolver()\n                });\n            }\n            return null;\n        });\n\n\n\n    }\n}\n\nexport default new LayerFactory();\n","\nimport * as jquery from \"jquery\";\nconst jQuery = jquery;\n\nimport * as Q from \"q\";\n\nimport {\n    icon as iconFn, marker as markerFn, circleMarker as circleMarkerFn,\n    SVG, svg, Canvas, canvas,\n    Util\n} from 'leaflet';\n\nimport * as esri from \"esri-leaflet\";\n\nimport {Config} from \"geoplatform.client\";\nimport featurePopupTemplate from '../shared/popup-template';\n\n/**\n * Feature Layer\n * Provides custom style loading and point-ilization as well\n * as adding visibility and opacity manipulation methods\n */\nvar FeatureLayer = esri.FeatureLayer.extend({\n\n    _gpStyle : { color: \"#00f\", weight: 2, fillColor: '#00f', fillOpacity: 0.3 },\n\n    /**\n     * @param {object} feature - GeoJSON Point Feature\n     * @param {L.LatLng} latlng\n     * @return {L.Marker}\n     */\n    pointToLayerFn: function (feature, latlng) {\n\n        // console.log(\"Feature: \" + feature.id);\n\n        var style = feature && feature.properties ? feature.properties.style : null;\n        if(!style && typeof this.options.style === 'function') {\n            // console.log(\"Using local style function\");\n            try {\n                style = this.options.style(feature);\n            } catch(e) {\n                console.log(\"error using style function in ClusteredFeatureLayer: \" + e.message);\n            }\n        }\n\n        style = style || this.options.style || {};\n\n        let marker = null;\n        if(style.shape === 'image') {\n            let width = style.width || 16;\n            let height = style.height || 16;\n            var icon = iconFn( {\n                iconUrl: style.content, //base64 encoded string\n                iconSize: [width, height],\n                iconAnchor: [width*0.5, height*0.5],\n                popupAnchor: [0, -11],\n            });\n            let mopts = { icon: icon };\n            if(Config.leafletPane) (mopts as any).pane = Config.leafletPane;\n            marker = markerFn( latlng, mopts);\n\n        } else {\n            style.radius = style.radius || style['stroke-width'] || 4;\n            style.weight = style.weight || style['stroke-width'] || 2;\n            style.color = style.color || style.stroke || '#03f';\n            style.opacity = style.opacity || style['stroke-opacity'] || 0.9;\n            style.fillOpacity = style.opacity || style['fill-opacity'] || 0.3;\n            style.fillColor = style.color || style.fill;\n            style.renderer = this.options.renderer;  //important for pane!\n            marker = circleMarkerFn(latlng, style);\n        }\n\n        let popupTemplate = this.options.popupTemplate || featurePopupTemplate;\n        marker.bindPopup(popupTemplate(feature));\n        return marker;\n    },\n\n    /**\n     * for all non-point features, bind a popup\n     * @param {object} feature - GeoJSON feature\n     * @param {L.Layer} layer - layer representing feature\n     */\n    eachFeatureFn: function(feature, layer) {\n        if(!feature || !feature.geometry || feature.geometry.type === 'Point') {\n            return;\n        }\n        layer.bindPopup(featurePopupTemplate(feature));\n    },\n\n\n\n    initialize: function (options) {\n\n        var self = this;\n        options = options || {};\n\n        if(Config.leafletPane)\n            options.pane = Config.leafletPane;\n\n        let getGPStyle = () => { return this._gpStyle; };\n        options.style = options.style || getGPStyle();\n\n        //in order to put features-based layers into same pane as tile layers,\n        // must specify renderer and set desired pane on that\n        let svgOpts = { };\n        if(Config.leafletPane)\n            (svgOpts as any).pane = Config.leafletPane;\n        var renderer = (SVG && svg(svgOpts)) || (Canvas && canvas());\n        options.renderer = renderer;\n\n        options.pointToLayer = Util.bind(this.pointToLayerFn, this);\n        options.onEachFeature = Util.bind(this.eachFeatureFn, this);\n\n        // options.fields = ['FID', 'type', 'title', 'geometry'];\n\n        FeatureLayer.prototype.initialize.call(this, options);\n\n        this.on('load', function() {\n            if(typeof this.options.zIndex !== 'undefined')\n                this.setZIndex(this.options.zIndex);\n        });\n\n    },\n\n    setZIndex : function (index) {\n        this.options.zIndex = index;\n        for(var id in this._layers)\n            this._layers[id].setZIndex(index);\n    },\n\n    toggleVisibility: function() {\n        for(var id in this._layers) {\n            let layer = this._layers[id];\n            if(layer.toggleVisibility)\n                this._layers[id].toggleVisibility();\n        }\n    },\n\n    setOpacity: function(opacity) {\n        for(var id in this._layers) {\n            let layer = this._layers[id];\n            if(layer.setOpacity)\n                layer.setOpacity(opacity);\n        }\n    },\n\n    loadStyle: function(gpLayerId) {\n        var self = this;\n\n        if(this.options.styleLoader) {\n            this.options.styleLoader(gpLayerId)\n            .then( json => {\n\n                if(!json) return;\n\n                let style = null;\n\n                if(json && json.styles) {\n\n                    let featureFn = function(feature : any) : any {\n\n                        let property = this.property || this.field1;\n                        let v = feature[property] || (feature.properties ? feature.properties[property] : null);\n                        let style = null;\n                        if(this.styles) {\n                            let wrapper = this.styles.find( sw => sw.value === v );\n                            if(wrapper) {\n                                style = wrapper.style;\n                                style.radius = style.radius || style['stroke-width'] || 4;\n                                style.weight = style.weight || style['stroke-width'] || 2;\n                                style.color = style.color   || style.stroke || '#03f';\n                                style.opacity = style.opacity || style['stroke-opacity'] || 0.9;\n                                style.fillOpacity = style.opacity || style['fill-opacity'] || 0.3;\n                                style.fillColor = style.color || style.fill;\n                            }\n                        }\n                        // console.log(\"Using style: \" + JSON.stringify(style));\n                        return style;\n                    }\n\n                    let styleFn = () => { return featureFn(json); }\n                    this.options.style = styleFn;\n                    this.setStyle(styleFn);\n                    return;\n\n                } else if(json && typeof(json.push) !== 'undefined') {\n                    //multiple styles returned\n                    style = json[0];  //use first for now\n\n                } else if(json) {\n                    style = json;\n\n                } else {\n                    return; //unrecognizable style\n                }\n\n                if(style.shape) {\n                    var obj = jQuery.extend({}, style);\n                    obj.style = style;\n                    this._gpStyle = style;\n\n                    //setStyle on Cluster.FeatureLayer doesn't appear to work consistently for\n                    // non-clustered features.\n                    // this.setStyle(obj);\n                    //So instead, we manually set it on all features of the layer (that aren't clustered)\n                    for(let id in this._layers)\n                        this._layers[id].setStyle(obj);\n\n                }\n            })\n            .catch( e => {\n                console.log(\"Error fetching feature layer style\");\n                console.log(e);\n            });\n        }\n    }\n\n});\n\n\nexport default FeatureLayer;\n","\n\nimport * as jquery from \"jquery\";\nconst jQuery = jquery;\n\nimport * as Q from \"q\";\nimport * as geojson from 'geojson';\nimport {\n    Map, Layer, LatLng, LatLngBounds,\n    circleMarker, geoJSON,\n    featureGroup, FeatureGroup, LayerGroup\n} from 'leaflet';\n\nimport {\n    Config, ItemTypes,\n    ServiceFactory, ItemService, MapService, LayerService,\n    JQueryHttpClient\n} from 'geoplatform.client';\n\nimport LayerFactory from '../layer/factory';\nimport OSM from \"../layer/osm\";\nimport DefaultBaseLayer from '../layer/baselayer-default';\n\n\nclass Listener {\n\n    _listeners : any;\n\n    constructor() {\n        //listeners to be unregistered upon destroy\n        this._listeners = {};\n    }\n\n    on (type, listener) {\n        if(!this._listeners[type])\n            this._listeners[type] = [];\n        this._listeners[type].push(listener);\n    }\n\n    off (type, listener) {\n        if(!type) this._listeners = {};\n        if(!this._listeners[type]) return;\n        if(!listener) this._listeners[type] = [];\n        else {\n            var idx = this._listeners[type].indexOf(listener);\n            if(idx >= 0)\n                this._listeners[type].splice(idx, 1);\n        }\n    }\n\n    notify(type, ...options) {\n        if(!this._listeners[type]) return;\n        var args = Array.prototype.slice.call(arguments, 1);\n        this._listeners[type].forEach(function(l) { l.apply(null, args); });\n    }\n\n}\n\n\n\nexport default class MapInstance extends Listener {\n\n    private svcCache        : any;\n    private serviceFactory  : any;\n    private httpClient      : any;\n    public _key            : string;\n    private _mapId          : string;\n    private _mapDef         : any;\n    private _mapInstance    : Map;\n    private _defaultExtent  : any;\n    private _baseLayerDef   : any;\n    private _baseLayer      : Layer;\n    private _layerStates    : any;\n    private _layerCache     : any;\n    private _layerErrors    : any[];\n    private _layerErrorHandler : Function;\n    private _featureLayer   : FeatureGroup;\n    private _featureLayerVisible  : boolean;\n    private _tools          : any[];\n    private state           : any;\n    private _geoJsonLayerOpts : any;\n\n\n\n\n    constructor(key) {\n        super();\n\n        this.setHttpClient(new JQueryHttpClient());\n        this.setServiceFactory(ServiceFactory);\n\n        //generate random key (see factory below)\n        this._key = key || Math.ceil(Math.random()*9999);\n\n        //registry id of current map if available\n        this._mapId = null,\n\n        //definition of map (ie, from server)\n        this._mapDef = this.initializeMapDefinition(),\n\n        //primary map instance (ie, leaflet)\n        this._mapInstance = null,\n\n        //default map extent (if map doesn't have one for being saved)\n        this._defaultExtent = null,\n\n        //current base layer object and leaflet instance\n        this._baseLayerDef = null,\n        this._baseLayer = null,\n\n        //set definitions of layer states (including layer info) on map\n        this._layerStates = [],\n\n        //map layer def ids with leaflet instances\n        this._layerCache = {},\n\n        //errors generated by layers loading\n        this._layerErrors= [],\n        this._layerErrorHandler = function(e) {\n            console.log(`MapInstance.defaultLayerErrorHandler() - ${e.id} : ${e.message}`);\n        },\n\n        //layer used to store features on map\n        this._featureLayer = null,\n        this._featureLayerVisible = true,\n\n        //set of registered map tools\n        this._tools = [],\n\n        //state management\n        this.state = { dirty: false }; // jshint ignore:line\n\n        this._geoJsonLayerOpts  = {\n            style: function(feature) {\n                if(feature.properties.style)\n                    return feature.properties.style;\n            },\n            onEachFeature: function(feature, layer) {\n\n                var style = { weight: 2, color: '#03f', opacity: 0.9, radius: 4, fillColor: '#03f', fillOpacity: 0.5 };\n                if(~feature.geometry.type.indexOf('Point')) {\n                    style.fillOpacity = 0.9;\n                }\n\n                var props = feature.properties = feature.properties || {};\n                if(feature.properties.id === undefined || feature.properties.id === null)\n                    feature.properties.id = Math.floor(Math.random()*999999);\n                feature.properties.label = props.label || props.title || props.name || \"Untitled \" + feature.geometry.type + \" Feature\";\n                feature.properties.description = props.description || props.desc || \"This feature needs a description!\";\n                feature.properties.style = props.style || style;\n\n                layer.bindTooltip(props.label);\n                /*\n                toggle: setLabelNoHide(bool)\n                it may only exist on markers!\n                */\n            },\n            pointToLayer: function (feature : any, latlng : LatLng ) {\n                var style = feature.properties.style || {};\n                style.radius = style.radius || 4;\n                style.weight = style.weight || 2;\n                style.color = style.color || '#03f';\n                style.opacity = style.opacity || 0.9;\n                style.fillOpacity = style.opacity;\n                style.fillColor = style.color;\n                return circleMarker(latlng, style);\n            }\n        };\n    }\n\n    dispose () {\n        this.destroyMap();\n        this.svcCache = null;\n        this.serviceFactory = null;\n        this.httpClient = null;\n        this._key = null;\n        this._mapId = null;\n        this._mapDef = null;\n        this._mapInstance = null;\n        this._defaultExtent = null;\n        this._baseLayerDef = null;\n        this._baseLayer = null;\n        this._layerStates = null;\n        this._layerCache = null;\n        this._layerErrors= null;\n        this._featureLayer = null;\n        this._featureLayerVisible = true;\n        this._tools = null;\n        this.state = null;\n        this._geoJsonLayerOpts = null;\n    }\n\n\n    getKey () {\n        return this._key;\n    }\n\n    /**\n     * Override default (JQuery-based) map service used by this instance\n     * @param mapService - service to use to CRUD map objects\n     * @deprecated use setServiceFactory instead\n     */\n    setService(mapService : MapService) {\n        // this.mapService = mapService;\n    }\n\n    /**\n     * @param factory - GeoPlatform ServiceFactory to instantiate services for maps and layers\n     */\n    setServiceFactory(factory : any) {\n        this.svcCache = {}; //wipe out cached services\n        this.serviceFactory = factory;\n    }\n\n    /**\n     * @param httpClient - HttpClient impl to use with the new factory\n     */\n    setHttpClient(httpClient : any) {\n        this.svcCache = {}; //wipe out cached services\n        this.httpClient = httpClient;\n    }\n\n    /**\n     * @param type - GeoPlatform Object model type to support (\"Map\", \"Layer\", etc)\n     * @return item service implementation for the requested type\n     */\n    getService(type : string) : ItemService {\n        if(!this.svcCache[type])\n            this.svcCache[type] = this.serviceFactory(type, Config.ualUrl, this.httpClient);\n        return this.svcCache[type];\n    }\n\n    /**\n     * @param fn - callback when an error is encountered\n     */\n    setErrorHandler(fn) {\n        this._layerErrorHandler = fn;\n    }\n\n\n    //-----------------\n    getLayerStateIndex (layerId) {\n        if(!layerId) return -1;\n        for(let i=0; i<this._layerStates.length; ++i) {\n            if(this._layerStates[i].layer && layerId === this._layerStates[i].layer.id) {\n                return i;\n            }\n        }\n        return -1;\n        // return this._layerStates.indexOfObj(layerId, (id, state) => state.layer.id === id );\n    }\n\n    getLayerState (layerId) {\n        let index = this.getLayerStateIndex(layerId);\n        return index >= 0 ? this._layerStates[index] : null;\n    }\n    //-----------------\n\n\n    initializeMapDefinition() {\n        return {\n            type: ItemTypes.MAP,\n            title: \"My New Map\",\n            label: \"My New Map\",\n            description: \"This map needs a description\",\n            createdBy: null,\n            baseLayer: this._baseLayerDef,\n            layers: [],\n            keywords: [],\n            themes: [],\n            resourceTypes: ['http://www.geoplatform.gov/ont/openmap/GeoplatformMap']\n        };\n    }\n\n    /**\n     * @param metadata object\n     * @return object definition of the current map suitable for sending to WMVR\n     */\n    getMapResourceContent(metadata ?: any) {\n\n        metadata = metadata || {};\n\n        //map layers\n        metadata.layers = this._layerStates.slice(0);\n        // ... UAL should support accepting just an id here, so we'll do just that\n        metadata.baseLayer = this._baseLayerDef;\n\n        metadata.annotations = this._featureLayer ?\n            { title: \"Map Features\", geoJSON: this._featureLayer.toGeoJSON() } : null;\n\n        //geographic extent\n        let extent = this._mapInstance.getBounds();\n        metadata.extent = {\n            minx: extent.getWest(),\n            miny: extent.getSouth(),\n            maxx: extent.getEast(),\n            maxy: extent.getNorth()\n        };\n\n        return metadata;\n    }\n\n    /**\n     * @return Leaflet toolbar\n     */\n    getDrawControlToolbar() {\n        if(!(this._mapInstance as any).drawControl) return null;\n        var toolbars = (this._mapInstance as any).drawControl._toolbars;\n        var toolbar = null;\n        for(var key in toolbars) {\n            if(toolbars.hasOwnProperty(key)) {\n                if(toolbars[key]._modes) {\n                    toolbar = toolbars[key];\n                    break;\n                }\n            }\n        }\n        return toolbar;\n    }\n\n    /**\n     * @param error Leaflet tile load error (.target is layer, .tile is image)\n     */\n    handleLayerError(error) {\n        // console.log(\"MapInstance.handleLayerError() - \" +\n        //     \"Layer's tile failed to load: \" + error.tile.src);\n        if(!this._layerCache) {\n            console.log(\"Unable to find layer in layer cache. Layer error is \" + error);\n            return;\n        }\n        var layer = error.target;\n        for(var id in this._layerCache) {\n            if(this._layerCache[id] === layer) {\n                this.processLayerError(error, id);\n                break;\n            }\n        }\n    }\n\n    /**\n     * Given a Leaflet tile load error and the responsible layer id,\n     * Try to isolate the cause of the error using the proxy\n     * and notify listeners that an error has occurred\n     */\n    processLayerError(error : Error, id : string) {\n\n        var finder = (l) => { return l.id === id || (l.layer && l.layer.id === id); };\n\n        if(!this._layerErrors.find(finder)) {\n\n            let obj = this.logLayerError(id, \"Layer ('\" + id + \"') failed to completely load. \" +\n                \"It may be inaccessible or misconfigured.\");\n\n            var url = (error as any).tile.src;\n            var params = {id:id};\n            url.substring(url.indexOf(\"?\")+1, url.length).split('&').forEach(function(param) {\n                var p = param.split('=');\n                params[p[0]] = p[1];\n            });\n\n            let layerService = this.getService(ItemTypes.LAYER);\n            if(layerService) {\n                layerService.validate(id, params)\n                .catch(e => {\n                    var def = this._layerStates.find(finder);\n                    if(def) {\n                        obj.message = \"Layer '\" + def.layer.label + \"' failed to completely load. \" +\n                                \"Reported cause: \" + e.message;\n                    }\n                    this.notify('layer:error', obj);\n                });\n            }\n        }\n    }\n\n    /**\n     * @param layerId - identifier of layer generating the error\n     * @param errorMsg - message of the error\n     */\n    logLayerError(layerId, errorMsg) {\n        // console.log(\"MapInstance.logLayerError() - layer \"  + id +\n        //     \" generated error '\" + errorMsg + \"'\");\n        let err = { id: layerId, message: errorMsg };\n        this._layerErrors.push(err);\n        if(this._layerErrorHandler) {\n            this._layerErrorHandler(err);\n        }\n        return err;\n    }\n\n    /* -- State Management of internal model -- */\n\n    touch (event ?: any, ...options) {\n        this.state.dirty = true;\n        if(event) {\n            if(arguments.length > 1) {\n                this.notify.apply(this, Array.prototype.slice.call(arguments));\n            } else\n                this.notify(event);\n            // console.log(\"Dirtying map for \" + event);\n        }\n        // else console.log(\"Dirtying map\");\n    }\n    clean() {\n        // console.log(\"Cleaning map\");\n        this.state.dirty = false;\n    }\n    /* --------------------------------------- */\n\n\n\n\n    /* ==============================================\n        Map manipulation operations\n       ============================================== */\n\n    setMap (map : Map) { this._mapInstance = map; }\n\n    /**\n     * @return  map instance\n     */\n    getMap () : Map { return this._mapInstance; }\n\n    /** @return definition of map */\n    getMapDefinition () : any { return this._mapDef; }\n\n    /** @return identifier of map */\n    getMapId () : string { return this._mapId; }\n\n    /**\n     * Focuses the map on the specified lat/lng coordinate\n     * @param lat number\n     * @param lng number\n     * @param zoom number (optional)\n     */\n    setView (lat : number, lng : number, zoom ?: number) {\n        let z = zoom;\n        if(typeof(z) === 'undefined')\n            z = this._mapInstance.getZoom();\n        this._mapInstance.setView([lat,lng], z);\n        this.touch('map:view:changed');\n    }\n\n    /**\n     * Retrieve the current center of the map\n     * @return [lat,lng]\n     */\n    getView () : number[] {\n        var latLng = this._mapInstance.getCenter();\n        return [latLng.lat, latLng.lng];\n    }\n\n    /**\n     * @return integer current zoom level of the map\n     */\n    getZoom () : number {\n        return this._mapInstance.getZoom();\n    }\n\n    /**\n     * Zoom to the map's default extent\n     * If the map is saved, this will be the saved viewport\n     * otherwise, it will be CONUS\n     */\n    zoomToDefault () {\n        if(!this._mapInstance) return;\n        if(this._defaultExtent) {\n            this._mapInstance.fitBounds([\n                [this._defaultExtent.miny, this._defaultExtent.minx],\n                [this._defaultExtent.maxy, this._defaultExtent.maxx]\n            ]);\n        } else {\n            console.log(\"MapInstance.zoomToDefault() - No default extent specified\");\n            this._mapInstance.setView([38, -96], 5);\n        }\n        try {\n            this.touch('map:view:changed');\n        } catch(e) { }\n    }\n\n    /**\n     * @param extent - either a GP extent object or Leaflet LatLngBounds object\n     */\n    setExtent(extent : LatLngBounds|any) {\n        if(!extent) return;\n        if( typeof(extent.minx) !== 'undefined' &&\n            typeof(extent.miny) !== 'undefined' &&\n            typeof(extent.maxx) !== 'undefined' &&\n            typeof(extent.maxy) !== 'undefined' ) {\n            //GP model extent\n            this._mapInstance.fitBounds([\n                [extent.miny, extent.minx],\n                [extent.maxy, extent.maxx]\n            ]);\n        } else if(typeof(extent.getWest) !== 'undefined') {\n            //L.LatLngBounds\n            this._mapInstance.fitBounds(extent);\n        } else {\n\n        }\n    }\n\n\n    /* ==============================================\n        Layer operations\n       ============================================== */\n\n\n    /**\n     * @param layer Leaflet Layer instance or object definition\n     */\n    setBaseLayer (layer : any) {\n\n        let promise = null;\n        if(!layer) {\n            promise = DefaultBaseLayer.get(this.getService(ItemTypes.LAYER));\n        } else\n            promise = Q.resolve(layer);\n\n        promise.then( layer => {\n\n            let leafletLayer = LayerFactory.create(layer);\n            if(!leafletLayer) {\n                console.log(\"Warning: MapInstance could not create base \" +\n                    \"layer for '\" + layer.id + \"'\");\n                return;\n            }\n\n            this._mapInstance.addLayer(leafletLayer);\n\n            (leafletLayer as any).setZIndex(0);  //set at bottom\n\n            let oldBaseLayer = this._baseLayer;\n            if(oldBaseLayer) {\n                this._mapInstance.removeLayer(oldBaseLayer);\n            }\n\n            //remember new base layer\n            this._baseLayer = leafletLayer;\n            this._baseLayerDef = layer;\n\n            //will notify listeners\n            this.touch('baselayer:changed', layer, leafletLayer);\n            // this.notify('baselayer:changed', layer, leafletLayer);\n\n        })\n        .catch(e => {\n            console.log(`MapInstance.setBaseLayer() - Error getting base layer for map : ${e.message}`);\n            this.logLayerError( layer.id, \"Error setting baselayer on map \" +\n                \"because of the following error(s): \" + e.message );\n        });\n    }\n\n    /**\n     * @return array of base layers definitions that can be used\n     */\n    // getBaseLayerOptions () {\n    //     return this._baseLayerOptions;\n    // },\n\n    getBaseLayer () : any { return this._baseLayerDef; }\n\n    /**\n     * @return list of layer states containing layer information\n     */\n    getLayers () : any[] { return this._layerStates; }\n\n    getLayerErrors () : any[] { return this._layerErrors; }\n\n    clearLayerErrors () {\n        this._layerErrors = [];\n        this.notify('layer:error');\n    }\n\n    clearOverlays () {\n        if(!this._layerCache) return;\n        for(var i=this._layerStates.length-1; i>=0; --i) {\n            var state = this._layerStates[i];\n            var layerInstance = this._layerCache[state.layer.id];\n            if(layerInstance) {\n                layerInstance.off(\"layer:error\");\n                this._layerCache[state.layer.id] = null;\n                this._mapInstance.removeLayer(layerInstance);\n            }\n        }\n        this._layerStates = [];\n        this.touch('layers:changed');\n\n        //TODO stop listening for layer events\n    }\n\n    /**\n     * @param layers - list of layers (NOTE: not wrapped by layer states, this method applies that)\n     */\n    addLayers (layers : any|any[] ) {\n        if(!this._layerCache) {\n            console.log(\"WARN: attempting to add layers to an empty cache\");\n            return;\n        }\n\n        if(!this._layerCache) {\n            console.log(\"WARN: Attempting to add layers to a map with no layer cache\");\n            return;\n        }\n\n        if(!layers) return;\n        if(typeof(layers.push) === 'undefined') {\n            layers = [layers];\n        }\n\n        layers.forEach( (obj,index) => {\n\n            let layer = null, state = null;\n\n            if(obj.type && obj.type===ItemTypes.LAYER) { //is a layer\n                layer = obj;\n            } else if(obj.layer) {  //is layer state\n                layer = obj.layer;  // containing a layer\n                state = obj;\n            }\n\n            if(!layer) {\n                console.log(\"MapInstance.addLayers() - layer (\" + index +\n                    \") is not a Layer or a Layer state. Ignoring...\");\n                return;  //layer info is missing, skip it\n            }\n\n            //DT-442 prevent adding layer that already exists on map\n            if(this._layerCache[layer.id]) return;\n\n            if(!state) {\n                try {\n                    //wrapped in try{}catch because layer may contain circular reference\n                    // which will cause error when used by JSON methods\n                    let layerCopy = JSON.parse(JSON.stringify(layer));\n                    state = {\n                        opacity: 1,\n                        visibility: true,\n                        layer: layerCopy\n                    };\n                } catch(e) {\n                    throw new Error(\"Unable to add layer to map because of \" + e.message);\n                }\n            }\n\n            let z = layers.length - index;\n            state.zIndex = z;\n\n            this.addLayerWithState(layer, state);\n\n        });\n\n        this.touch('layers:changed');\n    }\n\n    /**\n     * @param layer - GeoPlatform Layer instance\n     * @param state - GeoPlatform Layer State\n     */\n    addLayerWithState(layer, state) {\n\n        var leafletLayer = null;\n        try {\n            if(!layer || !state)\n                throw new Error(\"Invalid argument, missing layer and or state\");\n\n            leafletLayer = LayerFactory.create(layer);\n            if(!leafletLayer) {\n                throw new Error(\"Could not create leaflet layer for GP Layer '\" +\n                    layer.id + \"'\");\n            }\n\n        } catch(e) {\n            this.logLayerError( layer.id,\n                \"Layer '\" + layer.label + \"' could not be added to the \" +\n                \"map instance; \" + e.message);\n        }\n\n        if(!leafletLayer) return;\n\n        //cache leaflet object first\n        if(this._layerCache) this._layerCache[layer.id] = leafletLayer;\n\n        //listen for layer errors so we can inform the user\n        // that a layer hasn't been loaded in a useful way\n        leafletLayer.on('tileerror', (e) => { this.handleLayerError(e); });\n\n        this._mapInstance.addLayer(leafletLayer);\n\n        if( !isNaN(state.zIndex) && leafletLayer.setZIndex )\n            leafletLayer.setZIndex(state.zIndex);\n\n        this._layerStates.push(state);\n\n        this.notify('layer:added', layer, leafletLayer);\n\n\n        // if layer is initially \"off\" or...\n        // if layer is initially not 100% opaque\n        if(!state.visibility || state.opacity < 1) {\n            // initialize layer visibility and opacity async, or else\n            // some of the layers won't get properly initialized\n            setTimeout( (layer, state) => {\n                this.setLayerVisibility(layer, state.visibility);\n                this.setLayerOpacity(layer, state.opacity);\n                //TODO notify of change\n\n                //DT-2102 timeout needs to be large enough or else\n                // feature layers won't get opacity updated on map load\n            }, 2000, leafletLayer, state);\n        }\n    }\n\n    /**\n     * @param from - position of layer being moved\n     * @param to - desired position to move layer to\n     */\n    moveLayer (from : number, to : number) {\n        if(!this._layerCache) return;\n\n        if(!this._layerCache) return;\n\n        if(isNaN(from)) return;\n\n        //end of list\n        if(isNaN(to)) to = this._layerStates.length-1;\n\n        let copy = this._layerStates.splice(from, 1)[0];    //grab layer being moved\n        this._layerStates.splice(to, 0, copy);\n\n        for(let z=1, i=this._layerStates.length-1; i>=0; --i,++z) {\n            let layerState = this._layerStates[i];\n            let layerInstance = this._layerCache[ layerState.layer.id ];\n            if(layerInstance) {\n                layerInstance.setZIndex(z);\n                layerState.zIndex = z;\n            }\n        }\n\n        this.touch('layers:changed', this.getLayers());\n    }\n\n    /**\n     *\n     */\n    removeLayer (id) {\n\n        if(!this._layerCache) return;\n        var layerInstance = this._layerCache[id];\n        if(layerInstance) {\n\n            //remove layer from tracked defs array\n            let index = this.getLayerStateIndex(id);\n            // console.log(\"MapInstance.removeLayer(\" + id + \")\");\n            if(index >= 0 && index < this._layerStates.length)\n                this._layerStates.splice(index, 1);\n\n            //stop listening for errors\n            layerInstance.off(\"layer:error\");\n\n            //remove layer from map\n            this._mapInstance.removeLayer(layerInstance);\n\n            //remove layer from cache\n            this._layerCache[id] = null;\n        }\n        this.touch('layers:changed');\n    }\n\n    /**\n     *\n     */\n    toggleLayerVisibility (id) {\n        if(!this._layerCache) return;\n        var layerInstance = this._layerCache[id];\n        if(layerInstance) {\n            let state = this.getLayerState(id);\n            state.visibility = !state.visibility;\n\n            if(layerInstance._currentImage) {\n                //ESRI Image Service layers have an IMG element\n                // that gets modified and replaced every map event (zoom/pan)\n                // so we can't just toggle classes like on other layers.\n                //Instead, we need to use the ESRI setOpacity method to toggle\n                // but need to update layer state as well.\n                layerInstance.setOpacity(state.visibility ? 1 : 0);\n                state.opacity = layerInstance.getOpacity();\n                return;\n            }\n\n            this.setLayerVisibility(layerInstance, state.visibility);\n        }\n    }\n\n    /**\n     * Note: this does not update layer definition state. Use\n     * MapInstance.toggleLayerVisibility to do that and adjust\n     * rendered layer's visibility.\n     *\n     * @param layerInstance - leaflet layer instance\n     * @param visible - flag indicating visibility of layer\n     */\n    setLayerVisibility (layerInstance : Layer, visible : boolean) {\n\n        if((layerInstance as any).setVisibility) {\n            //using custom method provided in src/layer/module.js\n            (layerInstance as any).setVisibility(visible);\n\n        } else if((layerInstance as any)._container) {\n            //otherwise, using jquery on dom directly\n            let el = jQuery((layerInstance as any)._container);\n            // if(visible) el.removeClass(\"invisible\");\n            // else el.addClass('invisible');\n            el.css({'display': visible ? '' : 'none'});\n        }\n\n        this.touch('map:layer:changed');\n    }\n\n    /**\n     *\n     */\n    updateLayerOpacity (id : string, opacity : number) {\n\n        if(!this._layerCache) return;\n        var layerInstance = this._layerCache[id];\n\n        //if layer id is for base layer...\n        if(!layerInstance && this._baseLayerDef.id === id) {\n            layerInstance = this._baseLayer;\n        }\n\n        //adjust rendered leaflet layer\n        opacity = this.setLayerOpacity(layerInstance, opacity);\n\n        // if overlay layer, update state value\n        let state = this.getLayerState(id);\n        if(state) state.opacity = opacity;\n\n    }\n\n    /**\n     * Note: this method does not update the associated Layer Definition\n     * state value for opacity. Use MapInstance.updateLayerOpacity() to\n     * both update state and adjust rendered layer.\n     *\n     * @param layerInstance - leaflet layer instance\n     * @param opacity - value between 0 and 1.0 or 0 and 100\n     * @return normalized opacity value between 0 and 1.0\n     */\n    setLayerOpacity (layerInstance : Layer, opacity : number) : number {\n        if(layerInstance && (layerInstance as any).setOpacity) {\n            if(opacity > 1.0) opacity = opacity / 100.0;\n            (layerInstance as any).setOpacity(opacity);\n            this.touch('map:layer:changed');\n        }\n        return opacity;\n    }\n\n    /**\n     * @param GeoPlatform Layer instance\n     * @return Leaflet layer instance representing that layer or null\n     */\n    getLeafletLayerFor (gpLayer : any) : Layer {\n        if(!gpLayer || !this._layerCache) return null;\n        let leafletLayer = this._layerCache[gpLayer.id];\n        return leafletLayer || null;\n    }\n\n    /**\n     *\n     */\n    toggleGetFeatureInfo (layerId : string) {\n        if(!this._layerCache) return;\n        var layerInstance = this._layerCache[layerId];\n        if(layerInstance) {\n            if(typeof(layerInstance.enableGetFeatureInfo) !== 'undefined') {\n                if(layerInstance.isGetFeatureInfoEnabled()) {\n                    layerInstance.disableGetFeatureInfo();\n                    jQuery((this._mapInstance as any)._container).removeClass('selectable-cursor');\n                } else {\n                    layerInstance.enableGetFeatureInfo();\n                    jQuery((this._mapInstance as any)._container).addClass('selectable-cursor');\n                }\n            }\n\n        }\n    }\n\n\n    /* ==============================================\n       Feature operations\n       ============================================== */\n\n\n    /**\n     * @return array of features on the map\n     */\n    getFeatures () : any[] {\n        if(this._featureLayer) {\n            let geojson = this._featureLayer.toGeoJSON();\n            return (geojson as any).features;\n        }\n        return [];\n    }\n\n    /**\n     * @param json geojson object or array of geojson objects\n     */\n    addFeatures (json : any) {\n\n        if(!json) return;\n\n        if(typeof(json.push) !== 'undefined') {\n            //array of features\n            for(var i=0; i<json.length; ++i)\n                this.addFeature(json[i], false);\n            this.touch('features:changed');\n\n        } else if(json.features) {\n            this.addFeatures(json.features);\n\n        } else { //single feature\n            this.addFeature(json, true);\n        }\n\n    }\n\n    /**\n     * @param json geojson object\n     */\n    addFeature (json : any, fireEvent ?: boolean) {\n        // var type = json.type;\n        // var coordinates = json.coordinates;\n\n        if(!this._featureLayer) {\n\n            // _featureLayer = geoJSON([], _geoJsonLayerOpts).addTo(_mapInstance);\n            this._featureLayer = featureGroup().addTo(this._mapInstance);\n\n        }\n\n        // _featureLayer.addData(json);\n        var opts = jQuery.extend({}, this._geoJsonLayerOpts);\n        geoJSON(json, opts).eachLayer((l)=>this.addFeatureLayer(l));\n\n        if(typeof(fireEvent) === 'undefined' || fireEvent === true)\n            this.touch('features:changed');\n        else this.touch();\n\n        // console.log(JSON.stringify(_featureLayer.toGeoJSON()));\n\n    }\n\n    /**\n     * @param featureJson object defining a GeoJSON feature\n     */\n    updateFeature (featureJson : any) {\n        var layer = this.getFeatureLayer(featureJson.properties.id);\n        if(layer) {\n\n            (layer as any).feature = featureJson;\n\n            //update style\n            layer.setStyle(featureJson.properties.style);\n\n            //rebind label in case that changed\n            var label = featureJson.properties.label ||\n                \"Untitled \" + featureJson.geometry.type + \" Feature\";\n            layer.bindTooltip(label);\n\n            // layer.redraw();\n            this.touch(\"map:feature:changed\");\n        }\n    }\n\n    /**\n     * Replace an existing L.Path-based layer with one using\n     * the supplied Feature GeoJSON object.  Removes the existing\n     * layer and adds a new one created from the GeoJSON.\n     *\n     * @param featureJson object defining GeoJSON feature\n     */\n    replaceFeature (featureJson : any) {\n\n        //find existing layer for this feature\n        var layer = this.getFeatureLayer(featureJson.properties.id);\n        if(layer) {\n\n            //remove existing\n            this._featureLayer.removeLayer(layer);\n\n            //add replacement\n            geoJSON(featureJson, this._geoJsonLayerOpts)\n                .eachLayer((l)=>this.addFeatureLayer(l));\n\n            this.touch(\"map:feature:changed\");\n        }\n    }\n\n    /**\n     * @param featureId identifier of feature to focus the map on\n     */\n    focusFeature (featureId : string) {\n        var layer = this.getFeatureLayer(featureId);\n        if(layer) {\n            if( typeof(layer.getBounds) !== 'undefined') {\n                let extent = layer.getBounds();\n                this._mapInstance.fitBounds(extent);\n            } else if(typeof( (layer as any).getLatLng) !== 'undefined') {\n                let latLng = (layer as any).getLatLng();\n                this._mapInstance.panTo(latLng);\n            } else {\n                console.log(\"MapInstance.focusFeature() - Cannot focus feature because it has no bounds or lat/lng\");\n            }\n        } else {\n            console.log(\"MapInstance.focusFeature() - Cannot focus feature because it has no layer\");\n        }\n    }\n\n    /**\n     * @param featureId : string\n     */\n    removeFeature (featureId) {\n        var layer = this.getFeatureLayer(featureId);\n        if(layer && this._featureLayer) {\n            this._featureLayer.removeLayer(layer);\n            this.touch('features:changed');\n        }\n    }\n\n    /**\n     *\n     */\n    removeFeatures () {\n        if(this._featureLayer) {\n            this._featureLayer.clearLayers();\n            this.touch(\"features:changed\");\n        }\n    }\n\n    /**\n     *\n     */\n    getFeatureLayer ( featureId ?: string ) : FeatureGroup {\n        //if no feature was specified, return root feature layer\n        if(!featureId) return this._featureLayer;\n\n        //otherwise, find feature...\n        if(!this._featureLayer) return null;\n        \n        var features = this._featureLayer.getLayers();\n        for(var i=0; i<features.length; ++i) {\n            if( (features[i] as any).feature &&\n                (features[i] as any).feature.properties.id === featureId) {\n                return (features[i] as any);\n            }\n        }\n        return null;\n    }\n\n    toggleFeaturesLayer () {\n        if(!this._featureLayer) return false;    //ignore if not rendered yet\n\n        this._featureLayerVisible = !this._featureLayerVisible;\n        this.setFeatureLayerVisibility(this._featureLayer, this._featureLayerVisible);\n        return this._featureLayerVisible;\n    }\n\n    /**\n     * @param  feature - Leaflet feature instance\n     * @param  visibility - flag\n     */\n    setFeatureVisibility (feature, visibility : boolean) {\n        this.setFeatureLayerVisibility(feature, visibility);\n    }\n\n    getFeaturesLayerVisibility () {\n        return this._featureLayerVisible;\n    }\n\n\n    /*\n     * method for adding feature layers to the map\n     * when these layers may be layer groups.\n     * finds leaf node layers and adds them to the\n     * map's feature group\n     */\n    addFeatureLayer(layer) {\n        this._addFeatureLayer(layer);\n        this.touch(\"features:changed\");\n    }\n\n    /**\n     * Internal method, use 'addFeatureLayer' instead\n     * @param layer\n     */\n    _addFeatureLayer(layer : Layer) {\n        if(!(layer as any).feature && layer instanceof LayerGroup) {\n            layer.eachLayer( (child) => {\n                this._addFeatureLayer(child);\n            });\n        } else {\n            this._featureLayer.addLayer(layer);\n        }\n    }\n\n\n    //toggle visibility of parent feature layer\n    setFeatureLayerVisibility(layer, visibility) {\n        if(!layer) return;\n        this._featureLayerVisible = visibility;\n\n        if(layer.getLayers) {\n            layer.getLayers().forEach( (child) => {\n                this.setFeatureLayerVisibility(child, visibility);\n            });\n\n        } else {\n            let container = layer._container || layer._path;\n            if(container)\n                container.style.display = visibility ? '' : 'none';\n        }\n    }\n\n\n\n    /* ==============================================\n       Map lifecycle operations\n       ============================================== */\n\n    /**\n     * @param metadata\n     * @return resolving persisted map\n     */\n    save (metadata : any) : Promise<any> {\n        return this.saveMap(metadata);\n    }\n\n    /**\n     * @param md object containing metadata properties for map\n     */\n    saveMap (md : any) : Promise<any> {\n\n        let metadata = md || {};\n\n        //add GeoPlatformMap resource type if not already present\n        const gpMapType = 'http://www.geoplatform.gov/ont/openmap/GeoplatformMap';\n        metadata.resourceTypes = metadata.resourceTypes || [];\n        if(metadata.resourceTypes.indexOf(gpMapType) < 0)\n            metadata.resourceTypes.push(gpMapType);\n\n        var content = this.getMapResourceContent(metadata);\n\n        //ensure the two name properties line up\n        if(content.title && content.title !== content.label) {\n            content.label = content.title;\n        } else if(content.label && !content.title) {\n            content.title = content.label;\n        }\n\n        // console.log(\"Updating: \" + JSON.stringify(map));\n        return this.getService(ItemTypes.MAP)\n        .save(content)\n        .then( result => {\n\n            //track new map's info so we can update it with next save\n            if(!this._mapId)\n                this._mapId = result.id;\n\n            this._mapDef = result;\n            this._defaultExtent = result.extent;\n            this.clean();\n            return result;\n        })\n        .catch(err=>{\n            console.log(\"MapCore MapInstance.saveMap() - \" +\n                \"The requested map could not be saved because: \" + err.message);\n            let e = new Error(\"The requested map could not be saved because of the following error(s): \" +\n                err.message);\n            return Q.reject(e);\n        });\n\n    }\n\n    /**\n     * Retrieve a map's descriptor from the registry\n     * @param mapId identifier of map\n     * @return resolving the map object\n     */\n    fetchMap (mapId : string) : Promise<any> {\n        //Having to send cache busting parameter to avoid CORS header cache\n        // not sending correct Origin value\n        return this.getService(ItemTypes.MAP).get(mapId);\n    }\n\n    /**\n     * Retrieve a map's descriptor and load it as the\n     * current map managed by this service\n     * @param mapId identifier of map\n     * @return resolving the map object\n     */\n    loadMap (mapId : string) : Promise<any> {\n\n        return this.fetchMap(mapId).then(map => {\n\n            if(!map) {\n                throw new Error(\"The requested map ('\" + mapId +\n                    \"') came back null\");\n\n            } else if(typeof(map) === 'string') {\n                throw new Error(\"The requested map ('\" + mapId +\n                    \"') came back as a string\");\n\n            } else if(map.message) {\n                throw new Error(\"There was an error loading the requested map ('\" +\n                    mapId + \"'): \" + map.message);\n            }\n\n\n            //loading a map by its ID, so we need to increment it's view count\n            if('development' !== Config.env) {\n\n                setTimeout( (map) => {\n                    //update view count\n                    let views = map.statistics ? (map.statistics.numViews||0) : 0;\n                    let patch = [ { op: 'replace', path: '/statistics/numViews', value: views+1 } ];\n                    this.getService(ItemTypes.MAP).patch(map.id, patch)\n                    // this.mapService.patch(map.id, patch)\n                    .then( updated => { map.statistics = updated.statistics; })\n                    .catch( e => {\n                        console.log(\"MapInstance.saveMap() - Error updating view \" +\n                            \"count for map ('\" + mapId + \"'): \" + e);\n                    });\n                }, 1000, map);\n\n            }\n\n            //load the map into the viewer\n            this.loadMapFromObj(map);\n\n            return map;\n        })\n        .catch( err => {\n            console.log(\"MapInstance.loadMap() - \" +\n                \"The requested map could not be loaded because \" + err.message);\n            let e = new Error(\"The requested map ('\" + mapId +\n                \"') could not be loaded because of the following error(s): \" +\n                err.message);\n            return Q.reject(e);\n        });\n    }\n\n    /**\n     * Load a map from its descriptor as the current\n     * map managed by this service\n     * @param map object\n     */\n    loadMapFromObj (map : any) {\n\n        // console.log(\"Loading Map Object\");\n        // console.log(map);\n\n        this._mapId = map.id;\n        this._mapDef = map;\n\n        map.extent = map.extent || {};\n        let west =  isNaN(map.extent.minx) ? -179.0 : map.extent.minx*1.0;\n        let east =  isNaN(map.extent.maxx) ?  179.0 : map.extent.maxx*1.0;\n        let south = isNaN(map.extent.miny) ?  -89.0 : map.extent.miny*1.0;\n        let north = isNaN(map.extent.maxy) ?   89.0 : map.extent.maxy*1.0;\n\n        //ensure x,y is ordered correctly\n        let t;\n        if(west > east) {\n            t = Math.min(west, east);\n            east = map.extent.maxx = Math.max(west, east);\n            west = map.extent.minx = t;\n        }\n        if(south > north) {\n            t = Math.min(south, north);\n            north = map.extent.maxy = Math.max(south, north);\n            south = map.extent.miny = t;\n        }\n\n        //prevent out-of-bounds extents\n        if(west < -180.0) west = -179.0;\n        if(east > 180.0)  east =  179.0;\n        if(south < -90.0) south = -89.0;\n        if(north > 90.0)  north =  89.0;\n\n        //set extent from loaded map\n        this._defaultExtent = map.extent;\n        var extent = map.extent;\n\n        //remove existing layers\n        this._mapInstance.eachLayer((l) => {\n            this._mapInstance.removeLayer(l);\n        });\n        this._layerCache = {};\n        this._layerStates = [];\n\n        //set new base layer\n        this.setBaseLayer(map.baseLayer);\n\n        //add layers from loaded map\n        this.addLayers(map.layers);\n\n        //add features\n        if(map.annotations && map.annotations.geoJSON) {\n            let fc = map.annotations.geoJSON;\n            if(fc.features)\n                this.addFeatures(fc.features);\n            else\n                this.addFeatures([fc]);\n        }\n\n        this._mapInstance.fitBounds([\n            [extent.miny, extent.minx],\n            [extent.maxy, extent.maxx]\n        ]);\n\n        this.clean();\n        this.notify('map:loaded', map);\n\n    }\n\n\n    /**\n     *\n     */\n    destroyMap () {\n        // console.log(\"Destroying Map\");\n        this._mapInstance = null;\n        this._layerCache = null;\n        this._layerStates = null;\n        this._featureLayer = null;\n    }\n\n    /**\n     * Used to take an existing map that is already persisted on the\n     * server and unlink it here in the client so that it will be saved\n     * as a completely new map when mapService.saveMap(...) is next called\n     */\n    setAsNewMap (mapToUse) {\n        this._mapId = null;\n        this._mapDef = mapToUse || this.initializeMapDefinition();\n    }\n\n\n    /* ==============================================\n        Tool operations\n       ============================================== */\n\n    registerTool (id, tool) {\n        this._tools[id] = tool;\n    }\n\n    unregisterTool (id) {\n        this._tools[id] = null;\n    }\n\n    enableTool (id, finish) {\n        if(!this._tools[id]) return false;\n        this._tools[id].activate(function() {\n            this.notify('tool:disabled', id);\n        });\n        this.notify('tool:enabled', id);\n    }\n\n\n    /* ----------- MISC ------------ */\n\n    //https://github.com/gsklee/ngStorage\n    cacheMap () {\n\n        if(this.state && this.state.dirty) {\n            var map = this.getMapResourceContent();\n            //use exploded layer info\n            map.layers = this._layerStates.slice(0);\n            // $sessionStorage.map = map;\n        }\n    }\n\n    restoreMap () {\n        // if($sessionStorage.map) {\n        //     console.log(\"Restoring cached map\");\n        //     let map = $sessionStorage.map;\n        //     // console.log(JSON.stringify(map));\n        //     $sessionStorage.map = null;\n        //     this.loadMapFromObj(map);\n        // }\n    }\n    /* ---------------------------- */\n}\n","\nimport MapInstance from './instance';\n\nvar cache = {};\n\nexport default {\n\n    get: function(key) {\n        if(key && cache[key])\n            return cache[key];\n\n        let instance = new MapInstance(key);\n        cache[instance._key] = instance;\n        return instance;\n    },\n\n    dispose: function(key) {\n        if(key) {\n            cache[key].dispose();\n            delete cache[key];\n        } else {\n            cache = null;\n        }\n    }\n};\n","\n\nexport default function() {\n\n    if (typeof Object.assign != 'function') {\n        // Must be writable: true, enumerable: false, configurable: true\n        Object.defineProperty(Object, \"assign\", {\n            value: function assign(target, varArgs) { // .length of function is 2\n                'use strict';\n                if (target == null) { // TypeError if undefined or null\n                    throw new TypeError('Cannot convert undefined or null to object');\n                }\n\n                var to = Object(target);\n\n                for (var index = 1; index < arguments.length; index++) {\n                    var nextSource = arguments[index];\n\n                    if (nextSource != null) { // Skip over if undefined or null\n                        for (var nextKey in nextSource) {\n                            // Avoid bugs when hasOwnProperty is shadowed\n                            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                                to[nextKey] = nextSource[nextKey];\n                            }\n                        }\n                    }\n                }\n                return to;\n            },\n            writable: true,\n            configurable: true\n        });\n    }\n\n}\n","\n// import * as L from \"leaflet\";\n// import * as esri from \"esri-leaflet\";\n\nimport Polyfills from \"./polyfills\";\nPolyfills();\n\n\nimport LoadingControl from './control/L.Control.Loading';\nimport MeasureControl from './control/L.Control.MeasureControl';\nimport MousePositionControl from './control/L.Control.MousePosition';\nimport FeatureEditor from './control/L.Control.FeatureEditor';\n\nimport DefaultBaseLayer from './layer/baselayer-default';\nimport LayerFactory from './layer/factory';\nimport OSMLayerFactory from './layer/osm-factory';\nimport ESRIClusterFeatureLayer from './layer/L.esri.Cluster.FeatureLayer';\nimport {\n    ClusteredFeatureLayer,\n    clusteredFeatures,\n    geoJsonFeed\n} from './layer/cluster-feature';\nimport FeatureLayer from './layer/feature';\nimport {WMS, wms} from './layer/wms';\nimport {WMST, wmst} from './layer/wmst';\nimport {WMTS, wmts} from './layer/wmts';\nimport ESRITileLayer from './layer/L.TileLayer.ESRI';\nimport OSM from './layer/osm';\n\nimport MapInstance from './map/instance';\nimport MapFactory from './map/factory';\n\nimport ServiceTypes from './service/types';\n\nimport PopupTemplate from './shared/popup-template';\nimport StyleResolver from './shared/style-resolver';\n\n\n\n\nexport {\n    LoadingControl,\n    MeasureControl,\n    MousePositionControl,\n    FeatureEditor,\n    DefaultBaseLayer,\n    LayerFactory,\n    OSMLayerFactory,\n    ESRIClusterFeatureLayer,\n    ClusteredFeatureLayer,\n    clusteredFeatures,\n    geoJsonFeed,\n    FeatureLayer,\n    WMS, wms,\n    WMST, wmst,\n    WMTS, wmts,\n    ESRITileLayer,\n    OSM,\n    MapInstance,\n    MapFactory,\n    ServiceTypes,\n    PopupTemplate,\n    StyleResolver\n};\n"]}