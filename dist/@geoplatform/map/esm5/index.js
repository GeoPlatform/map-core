/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
// import * as L from "leaflet";
// import * as esri from "esri-leaflet";
import Polyfills from "./polyfills";
Polyfills();
import LoadingControl from './control/L.Control.Loading';
import MeasureControl from './control/L.Control.MeasureControl';
import MousePositionControl from './control/L.Control.MousePosition';
import FeatureEditor from './control/L.Control.FeatureEditor';
import DefaultBaseLayer from './layer/baselayer-default';
import LayerFactory from './layer/factory';
import OSMLayerFactory from './layer/osm-factory';
import ESRIClusterFeatureLayer from './layer/L.esri.Cluster.FeatureLayer';
import { ClusteredFeatureLayer, clusteredFeatures, geoJsonFeed } from './layer/cluster-feature';
import FeatureLayer from './layer/feature';
import { WMS, wms } from './layer/wms';
import { WMST, wmst } from './layer/wmst';
import { WMTS, wmts } from './layer/wmts';
import ESRITileLayer from './layer/L.TileLayer.ESRI';
import OSM from './layer/osm';
import MapInstance from './map/instance';
import MapFactory from './map/factory';
import ServiceTypes from './service/types';
import PopupTemplate from './shared/popup-template';
import StyleResolver from './shared/style-resolver';
export { LoadingControl, MeasureControl, MousePositionControl, FeatureEditor, DefaultBaseLayer, LayerFactory, OSMLayerFactory, ESRIClusterFeatureLayer, ClusteredFeatureLayer, clusteredFeatures, geoJsonFeed, FeatureLayer, WMS, wms, WMST, wmst, WMTS, wmts, ESRITileLayer, OSM, MapInstance, MapFactory, ServiceTypes, PopupTemplate, StyleResolver };

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ2VvcGxhdGZvcm0vbWFwLyIsInNvdXJjZXMiOlsiaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBSUEsT0FBTyxTQUFTLE1BQU0sYUFBYSxDQUFDO0FBQ3BDLFNBQVMsRUFBRSxDQUFDO0FBR1osT0FBTyxjQUFjLE1BQU0sNkJBQTZCLENBQUM7QUFDekQsT0FBTyxjQUFjLE1BQU0sb0NBQW9DLENBQUM7QUFDaEUsT0FBTyxvQkFBb0IsTUFBTSxtQ0FBbUMsQ0FBQztBQUNyRSxPQUFPLGFBQWEsTUFBTSxtQ0FBbUMsQ0FBQztBQUU5RCxPQUFPLGdCQUFnQixNQUFNLDJCQUEyQixDQUFDO0FBQ3pELE9BQU8sWUFBWSxNQUFNLGlCQUFpQixDQUFDO0FBQzNDLE9BQU8sZUFBZSxNQUFNLHFCQUFxQixDQUFDO0FBQ2xELE9BQU8sdUJBQXVCLE1BQU0scUNBQXFDLENBQUM7QUFDMUUsT0FBTyxFQUNILHFCQUFxQixFQUNyQixpQkFBaUIsRUFDakIsV0FBVyxFQUNkLE1BQU0seUJBQXlCLENBQUM7QUFDakMsT0FBTyxZQUFZLE1BQU0saUJBQWlCLENBQUM7QUFDM0MsT0FBTyxFQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUMsTUFBTSxhQUFhLENBQUM7QUFDckMsT0FBTyxFQUFDLElBQUksRUFBRSxJQUFJLEVBQUMsTUFBTSxjQUFjLENBQUM7QUFDeEMsT0FBTyxFQUFDLElBQUksRUFBRSxJQUFJLEVBQUMsTUFBTSxjQUFjLENBQUM7QUFDeEMsT0FBTyxhQUFhLE1BQU0sMEJBQTBCLENBQUM7QUFDckQsT0FBTyxHQUFHLE1BQU0sYUFBYSxDQUFDO0FBRTlCLE9BQU8sV0FBVyxNQUFNLGdCQUFnQixDQUFDO0FBQ3pDLE9BQU8sVUFBVSxNQUFNLGVBQWUsQ0FBQztBQUV2QyxPQUFPLFlBQVksTUFBTSxpQkFBaUIsQ0FBQztBQUUzQyxPQUFPLGFBQWEsTUFBTSx5QkFBeUIsQ0FBQztBQUNwRCxPQUFPLGFBQWEsTUFBTSx5QkFBeUIsQ0FBQztBQUtwRCxPQUFPLEVBQ0gsY0FBYyxFQUNkLGNBQWMsRUFDZCxvQkFBb0IsRUFDcEIsYUFBYSxFQUNiLGdCQUFnQixFQUNoQixZQUFZLEVBQ1osZUFBZSxFQUNmLHVCQUF1QixFQUN2QixxQkFBcUIsRUFDckIsaUJBQWlCLEVBQ2pCLFdBQVcsRUFDWCxZQUFZLEVBQ1osR0FBRyxFQUFFLEdBQUcsRUFDUixJQUFJLEVBQUUsSUFBSSxFQUNWLElBQUksRUFBRSxJQUFJLEVBQ1YsYUFBYSxFQUNiLEdBQUcsRUFDSCxXQUFXLEVBQ1gsVUFBVSxFQUNWLFlBQVksRUFDWixhQUFhLEVBQ2IsYUFBYSxFQUNoQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiXG4vLyBpbXBvcnQgKiBhcyBMIGZyb20gXCJsZWFmbGV0XCI7XG4vLyBpbXBvcnQgKiBhcyBlc3JpIGZyb20gXCJlc3JpLWxlYWZsZXRcIjtcblxuaW1wb3J0IFBvbHlmaWxscyBmcm9tIFwiLi9wb2x5ZmlsbHNcIjtcblBvbHlmaWxscygpO1xuXG5cbmltcG9ydCBMb2FkaW5nQ29udHJvbCBmcm9tICcuL2NvbnRyb2wvTC5Db250cm9sLkxvYWRpbmcnO1xuaW1wb3J0IE1lYXN1cmVDb250cm9sIGZyb20gJy4vY29udHJvbC9MLkNvbnRyb2wuTWVhc3VyZUNvbnRyb2wnO1xuaW1wb3J0IE1vdXNlUG9zaXRpb25Db250cm9sIGZyb20gJy4vY29udHJvbC9MLkNvbnRyb2wuTW91c2VQb3NpdGlvbic7XG5pbXBvcnQgRmVhdHVyZUVkaXRvciBmcm9tICcuL2NvbnRyb2wvTC5Db250cm9sLkZlYXR1cmVFZGl0b3InO1xuXG5pbXBvcnQgRGVmYXVsdEJhc2VMYXllciBmcm9tICcuL2xheWVyL2Jhc2VsYXllci1kZWZhdWx0JztcbmltcG9ydCBMYXllckZhY3RvcnkgZnJvbSAnLi9sYXllci9mYWN0b3J5JztcbmltcG9ydCBPU01MYXllckZhY3RvcnkgZnJvbSAnLi9sYXllci9vc20tZmFjdG9yeSc7XG5pbXBvcnQgRVNSSUNsdXN0ZXJGZWF0dXJlTGF5ZXIgZnJvbSAnLi9sYXllci9MLmVzcmkuQ2x1c3Rlci5GZWF0dXJlTGF5ZXInO1xuaW1wb3J0IHtcbiAgICBDbHVzdGVyZWRGZWF0dXJlTGF5ZXIsXG4gICAgY2x1c3RlcmVkRmVhdHVyZXMsXG4gICAgZ2VvSnNvbkZlZWRcbn0gZnJvbSAnLi9sYXllci9jbHVzdGVyLWZlYXR1cmUnO1xuaW1wb3J0IEZlYXR1cmVMYXllciBmcm9tICcuL2xheWVyL2ZlYXR1cmUnO1xuaW1wb3J0IHtXTVMsIHdtc30gZnJvbSAnLi9sYXllci93bXMnO1xuaW1wb3J0IHtXTVNULCB3bXN0fSBmcm9tICcuL2xheWVyL3dtc3QnO1xuaW1wb3J0IHtXTVRTLCB3bXRzfSBmcm9tICcuL2xheWVyL3dtdHMnO1xuaW1wb3J0IEVTUklUaWxlTGF5ZXIgZnJvbSAnLi9sYXllci9MLlRpbGVMYXllci5FU1JJJztcbmltcG9ydCBPU00gZnJvbSAnLi9sYXllci9vc20nO1xuXG5pbXBvcnQgTWFwSW5zdGFuY2UgZnJvbSAnLi9tYXAvaW5zdGFuY2UnO1xuaW1wb3J0IE1hcEZhY3RvcnkgZnJvbSAnLi9tYXAvZmFjdG9yeSc7XG5cbmltcG9ydCBTZXJ2aWNlVHlwZXMgZnJvbSAnLi9zZXJ2aWNlL3R5cGVzJztcblxuaW1wb3J0IFBvcHVwVGVtcGxhdGUgZnJvbSAnLi9zaGFyZWQvcG9wdXAtdGVtcGxhdGUnO1xuaW1wb3J0IFN0eWxlUmVzb2x2ZXIgZnJvbSAnLi9zaGFyZWQvc3R5bGUtcmVzb2x2ZXInO1xuXG5cblxuXG5leHBvcnQge1xuICAgIExvYWRpbmdDb250cm9sLFxuICAgIE1lYXN1cmVDb250cm9sLFxuICAgIE1vdXNlUG9zaXRpb25Db250cm9sLFxuICAgIEZlYXR1cmVFZGl0b3IsXG4gICAgRGVmYXVsdEJhc2VMYXllcixcbiAgICBMYXllckZhY3RvcnksXG4gICAgT1NNTGF5ZXJGYWN0b3J5LFxuICAgIEVTUklDbHVzdGVyRmVhdHVyZUxheWVyLFxuICAgIENsdXN0ZXJlZEZlYXR1cmVMYXllcixcbiAgICBjbHVzdGVyZWRGZWF0dXJlcyxcbiAgICBnZW9Kc29uRmVlZCxcbiAgICBGZWF0dXJlTGF5ZXIsXG4gICAgV01TLCB3bXMsXG4gICAgV01TVCwgd21zdCxcbiAgICBXTVRTLCB3bXRzLFxuICAgIEVTUklUaWxlTGF5ZXIsXG4gICAgT1NNLFxuICAgIE1hcEluc3RhbmNlLFxuICAgIE1hcEZhY3RvcnksXG4gICAgU2VydmljZVR5cGVzLFxuICAgIFBvcHVwVGVtcGxhdGUsXG4gICAgU3R5bGVSZXNvbHZlclxufTtcbiJdfQ==