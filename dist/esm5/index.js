/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import Polyfills from "./polyfills";
Polyfills();
import LoadingControl from './control/loading';
import MeasureControl from './control/measure';
import MousePositionControl from './control/mouse-position';
import FeatureEditor from './control/feature-editor';
import DefaultBaseLayer from './layer/baselayer-default';
import LayerFactory from './layer/factory';
import OSMLayerFactory from './layer/osm-factory';
import BaseClusteredFeatureLayer from './layer/base-clustered-feature-layer';
import { ClusteredFeatureLayer, clusteredFeatures, geoJsonFeed } from './layer/cluster-feature';
import FeatureLayer from './layer/feature';
import { WMS, wms } from './layer/wms';
import { WMST, wmst } from './layer/wmst';
import { WMTS, wmts } from './layer/wmts';
import ESRITileLayer from './layer/esri-tile-layer';
import OSM from './layer/osm';
import MapInstance from './map/instance';
import MapFactory from './map/factory';
import ServiceTypes from './service/types';
import PopupTemplate from './shared/popup-template';
import StyleResolver from './shared/style-resolver';
export { LoadingControl, MeasureControl, MousePositionControl, FeatureEditor, DefaultBaseLayer, LayerFactory, OSMLayerFactory, BaseClusteredFeatureLayer, ClusteredFeatureLayer, clusteredFeatures, geoJsonFeed, FeatureLayer, WMS, wms, WMST, wmst, WMTS, wmts, ESRITileLayer, OSM, MapInstance, MapFactory, ServiceTypes, PopupTemplate, StyleResolver
// ,
// parseMapBoxStyle
 };

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ2VvcGxhdGZvcm0vbWFwY29yZS8iLCJzb3VyY2VzIjpbImluZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFDQSxPQUFPLFNBQVMsTUFBTSxhQUFhLENBQUM7QUFDcEMsU0FBUyxFQUFFLENBQUM7QUFHWixPQUFPLGNBQWMsTUFBTSxtQkFBbUIsQ0FBQztBQUMvQyxPQUFPLGNBQWMsTUFBTSxtQkFBbUIsQ0FBQztBQUMvQyxPQUFPLG9CQUFvQixNQUFNLDBCQUEwQixDQUFDO0FBQzVELE9BQU8sYUFBYSxNQUFNLDBCQUEwQixDQUFDO0FBRXJELE9BQU8sZ0JBQWdCLE1BQU0sMkJBQTJCLENBQUM7QUFDekQsT0FBTyxZQUFZLE1BQU0saUJBQWlCLENBQUM7QUFDM0MsT0FBTyxlQUFlLE1BQU0scUJBQXFCLENBQUM7QUFDbEQsT0FBTyx5QkFBeUIsTUFBTSxzQ0FBc0MsQ0FBQztBQUM3RSxPQUFPLEVBQ0gscUJBQXFCLEVBQ3JCLGlCQUFpQixFQUNqQixXQUFXLEVBQ2QsTUFBTSx5QkFBeUIsQ0FBQztBQUNqQyxPQUFPLFlBQVksTUFBTSxpQkFBaUIsQ0FBQztBQUMzQyxPQUFPLEVBQUMsR0FBRyxFQUFFLEdBQUcsRUFBQyxNQUFNLGFBQWEsQ0FBQztBQUNyQyxPQUFPLEVBQUMsSUFBSSxFQUFFLElBQUksRUFBQyxNQUFNLGNBQWMsQ0FBQztBQUN4QyxPQUFPLEVBQUMsSUFBSSxFQUFFLElBQUksRUFBQyxNQUFNLGNBQWMsQ0FBQztBQUN4QyxPQUFPLGFBQWEsTUFBTSx5QkFBeUIsQ0FBQztBQUNwRCxPQUFPLEdBQUcsTUFBTSxhQUFhLENBQUM7QUFFOUIsT0FBTyxXQUFXLE1BQU0sZ0JBQWdCLENBQUM7QUFDekMsT0FBTyxVQUFVLE1BQU0sZUFBZSxDQUFDO0FBRXZDLE9BQU8sWUFBWSxNQUFNLGlCQUFpQixDQUFDO0FBRTNDLE9BQU8sYUFBYSxNQUFNLHlCQUF5QixDQUFDO0FBQ3BELE9BQU8sYUFBYSxNQUFNLHlCQUF5QixDQUFDO0FBS3BELE9BQU8sRUFDSCxjQUFjLEVBQ2QsY0FBYyxFQUNkLG9CQUFvQixFQUNwQixhQUFhLEVBQ2IsZ0JBQWdCLEVBQ2hCLFlBQVksRUFDWixlQUFlLEVBQ2YseUJBQXlCLEVBQ3pCLHFCQUFxQixFQUNyQixpQkFBaUIsRUFDakIsV0FBVyxFQUNYLFlBQVksRUFDWixHQUFHLEVBQUUsR0FBRyxFQUNSLElBQUksRUFBRSxJQUFJLEVBQ1YsSUFBSSxFQUFFLElBQUksRUFDVixhQUFhLEVBQ2IsR0FBRyxFQUNILFdBQVcsRUFDWCxVQUFVLEVBQ1YsWUFBWSxFQUNaLGFBQWEsRUFDYixhQUFhO0FBQ2IsSUFBSTtBQUNKLG1CQUFtQjtFQUN0QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgUG9seWZpbGxzIGZyb20gXCIuL3BvbHlmaWxsc1wiO1xuUG9seWZpbGxzKCk7XG5cblxuaW1wb3J0IExvYWRpbmdDb250cm9sIGZyb20gJy4vY29udHJvbC9sb2FkaW5nJztcbmltcG9ydCBNZWFzdXJlQ29udHJvbCBmcm9tICcuL2NvbnRyb2wvbWVhc3VyZSc7XG5pbXBvcnQgTW91c2VQb3NpdGlvbkNvbnRyb2wgZnJvbSAnLi9jb250cm9sL21vdXNlLXBvc2l0aW9uJztcbmltcG9ydCBGZWF0dXJlRWRpdG9yIGZyb20gJy4vY29udHJvbC9mZWF0dXJlLWVkaXRvcic7XG5cbmltcG9ydCBEZWZhdWx0QmFzZUxheWVyIGZyb20gJy4vbGF5ZXIvYmFzZWxheWVyLWRlZmF1bHQnO1xuaW1wb3J0IExheWVyRmFjdG9yeSBmcm9tICcuL2xheWVyL2ZhY3RvcnknO1xuaW1wb3J0IE9TTUxheWVyRmFjdG9yeSBmcm9tICcuL2xheWVyL29zbS1mYWN0b3J5JztcbmltcG9ydCBCYXNlQ2x1c3RlcmVkRmVhdHVyZUxheWVyIGZyb20gJy4vbGF5ZXIvYmFzZS1jbHVzdGVyZWQtZmVhdHVyZS1sYXllcic7XG5pbXBvcnQge1xuICAgIENsdXN0ZXJlZEZlYXR1cmVMYXllcixcbiAgICBjbHVzdGVyZWRGZWF0dXJlcyxcbiAgICBnZW9Kc29uRmVlZFxufSBmcm9tICcuL2xheWVyL2NsdXN0ZXItZmVhdHVyZSc7XG5pbXBvcnQgRmVhdHVyZUxheWVyIGZyb20gJy4vbGF5ZXIvZmVhdHVyZSc7XG5pbXBvcnQge1dNUywgd21zfSBmcm9tICcuL2xheWVyL3dtcyc7XG5pbXBvcnQge1dNU1QsIHdtc3R9IGZyb20gJy4vbGF5ZXIvd21zdCc7XG5pbXBvcnQge1dNVFMsIHdtdHN9IGZyb20gJy4vbGF5ZXIvd210cyc7XG5pbXBvcnQgRVNSSVRpbGVMYXllciBmcm9tICcuL2xheWVyL2VzcmktdGlsZS1sYXllcic7XG5pbXBvcnQgT1NNIGZyb20gJy4vbGF5ZXIvb3NtJztcblxuaW1wb3J0IE1hcEluc3RhbmNlIGZyb20gJy4vbWFwL2luc3RhbmNlJztcbmltcG9ydCBNYXBGYWN0b3J5IGZyb20gJy4vbWFwL2ZhY3RvcnknO1xuXG5pbXBvcnQgU2VydmljZVR5cGVzIGZyb20gJy4vc2VydmljZS90eXBlcyc7XG5cbmltcG9ydCBQb3B1cFRlbXBsYXRlIGZyb20gJy4vc2hhcmVkL3BvcHVwLXRlbXBsYXRlJztcbmltcG9ydCBTdHlsZVJlc29sdmVyIGZyb20gJy4vc2hhcmVkL3N0eWxlLXJlc29sdmVyJztcbi8vIGltcG9ydCBwYXJzZU1hcEJveFN0eWxlIGZyb20gJy4vc2hhcmVkL21hcGJveC1zdHlsZSc7XG5cblxuXG5leHBvcnQge1xuICAgIExvYWRpbmdDb250cm9sLFxuICAgIE1lYXN1cmVDb250cm9sLFxuICAgIE1vdXNlUG9zaXRpb25Db250cm9sLFxuICAgIEZlYXR1cmVFZGl0b3IsXG4gICAgRGVmYXVsdEJhc2VMYXllcixcbiAgICBMYXllckZhY3RvcnksXG4gICAgT1NNTGF5ZXJGYWN0b3J5LFxuICAgIEJhc2VDbHVzdGVyZWRGZWF0dXJlTGF5ZXIsXG4gICAgQ2x1c3RlcmVkRmVhdHVyZUxheWVyLFxuICAgIGNsdXN0ZXJlZEZlYXR1cmVzLFxuICAgIGdlb0pzb25GZWVkLFxuICAgIEZlYXR1cmVMYXllcixcbiAgICBXTVMsIHdtcyxcbiAgICBXTVNULCB3bXN0LFxuICAgIFdNVFMsIHdtdHMsXG4gICAgRVNSSVRpbGVMYXllcixcbiAgICBPU00sXG4gICAgTWFwSW5zdGFuY2UsXG4gICAgTWFwRmFjdG9yeSxcbiAgICBTZXJ2aWNlVHlwZXMsXG4gICAgUG9wdXBUZW1wbGF0ZSxcbiAgICBTdHlsZVJlc29sdmVyXG4gICAgLy8gLFxuICAgIC8vIHBhcnNlTWFwQm94U3R5bGVcbn07XG4iXX0=